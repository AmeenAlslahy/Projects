# -*- coding: utf-8 -*- # ูุญุฏุฏ ุชุฑููุฒ ุงูููู ููููู UTF-8ุ ููุง ูุณูุญ ุจูุชุงุจุฉ ุงูุฃุญุฑู ุงูุนุฑุจูุฉ ูู ุงูููุฏ ูุงููุฎุฑุฌุงุช.
# ุงุณุชูุฑุงุฏ ุงูููุชุจุงุช ุงููุงุฒูุฉ # ูุณู ุงุณุชูุฑุงุฏ ุงูููุชุจุงุช ุงูุชู ูุญุชุงุฌูุง ุงูุจุฑูุงูุฌ ููุนูู.
import socket # ูุงุณุชุฎุฏุงู ุงูููุงุจุณ (Sockets) ูู ุฅูุดุงุก ุงูุงุชุตุงูุงุช ุงูุดุจููุฉ ุจูู ุงูุฎุงุฏู ูุงูุนููุงุก.
import threading # ููุณูุงุญ ุจุชุดุบูู ุนุฏุฉ ุฃุฌุฒุงุก ูู ุงูููุฏ ุจุดูู ูุชุฒุงูู (ูุซู ุฅุฑุณุงู ูุงุณุชูุจุงู ุงูููุฏูู ูุงูุตูุช ูู ููุณ ุงูููุช).
import cv2 # ููุชุจุฉ OpenCV ููุนุงูุฌุฉ ุงูููุฏููุ ุชูุณุชุฎุฏู ููุง ูุงูุชูุงุท ุงูุตูุฑ ูู ุงููุงููุฑุง ูุถุบุทูุง.
import pyaudio # ููุชุนุงูู ูุน ุงูุตูุชุ ุชูุณุชุฎุฏู ูุชุณุฌูู ุงูุตูุช ูู ุงููููุฑูููู ูุชุดุบููู ุนูู ุงูุณูุงุนุงุช.
import pickle # ูุชุญููู ูุงุฆูุงุช ุจุงูุซูู (ูุซู ุงูููุงุฆู ูุงูููุงููุณ) ุฅูู ุณูุณูุฉ ูู ุงูุจุงูุชุงุช ูุฅุฑุณุงููุง ุนุจุฑ ุงูุดุจูุฉ ูุงูุนูุณ.
import struct # ููุชุนุงูู ูุน ุงูุจูุงูุงุช ุงูุซูุงุฆูุฉ (binary data)ุ ูููู ุบูุฑ ูุณุชุฎุฏู ุจุดูู ูุจุงุดุฑ ููุง ููููู ุฅุฒุงูุชู.
import sys # ููุชุญูู ูู ุจูุฆุฉ ุชุดุบูู ุจุงูุซููุ ููุณุชุฎุฏู ููุง ูุฅุบูุงู ุงูุจุฑูุงูุฌ ุจุดูู ูุงูู.
import numpy as np # ููุชุจุฉ ููุชุนุงูู ูุน ุงููุตูููุงุช ุงูุฑูููุฉุ ุชูุณุชุฎุฏู ูุชุญููู ุจูุงูุงุช ุงูุตูุฑุฉ.
from PIL import Image, ImageTk # ููุชุจุฉ Pillow (PIL) ููุนุงูุฌุฉ ุงูุตูุฑ ูุชุญููููุง ุฅูู ุตูุบุฉ ูุชูุงููุฉ ูุน ูุงุฌูุฉ Tkinter.
import tkinter as tk # ุงูููุชุจุฉ ุงูุฃุณุงุณูุฉ ูุฅูุดุงุก ุงููุงุฌูุงุช ุงูุฑุณูููุฉ (GUI).
from tkinter import messagebox, simpledialog # ูุญุฏุงุช ูุฑุนูุฉ ูู Tkinter ูุนุฑุถ ูุฑุจุนุงุช ุงูุญูุงุฑ (ูุซู ุฑุณุงุฆู ุงูุฎุทุฃ ุฃู ุทูุจ ุงูุฅุฏุฎุงู).
import ttkbootstrap as ttk # ููุชุจุฉ ูุชุฌููู ูุงุฌูุงุช Tkinter ูุฅุนุทุงุฆูุง ูุธูุฑุงู ุนุตุฑูุงู.
from ttkbootstrap.constants import * # ูุงุณุชูุฑุงุฏ ุงูุซูุงุจุช ุงููุนุฑูุฉ ูุณุจูุงู ูู ttkbootstrap (ูุซู ุฃุณูุงุก ุงูุฃููุงู ูุงูุฃููุงุท).
import time # ููุชุญูู ูู ุงูุชูููุชุ ูุซู ุฅููุงู ุงูุชูููุฐ ูุคูุชุงู.
import queue # ูุชูุธูู ุงูุจูุงูุงุช ูู ุทูุงุจูุฑุ ููุณุชุฎุฏู ููุง ูุชูุฑูุฑ ุงูุฅุดุนุงุฑุงุช ุจุฃูุงู ุจูู ุงูุฎููุท ูุงููุงุฌูุฉ ุงูุฑุณูููุฉ.

# --- ุฅุนุฏุงุฏุงุช ุฃุณุงุณูุฉ ---
IMAGE_QUALITY = 40  # ูุชุบูุฑ ูุชุญุฏูุฏ ุฌูุฏุฉ ุงูุตูุฑุฉ ุงููุถุบูุทุฉ (ุจุตูุบุฉ JPEG) ุนูุฏ ุฅุฑุณุงููุง. ูููุฉ ุฃูู ุชุนูู ุถุบุทุงู ุฃุนูู ูุญุฌูุงู ุฃุตุบุฑ.

# ุฏุงูุฉ ููุญุตูู ุนูู ุนููุงู IP ุงููุญูู
def get_local_ip(): # ุชุนุฑูู ุฏุงูุฉ ููุญุตูู ุนูู ุนููุงู IP ุงูุฎุงุต ุจุงูุฌูุงุฒ ุนูู ุงูุดุจูุฉ ุงููุญููุฉ.
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # ุฅูุดุงุก ููุจุณ ูู ููุน UDP (ูุฅุฑุณุงู ุงูุจูุงูุงุช ุจุฏูู ุงุชุตุงู ูุณุจู).
    try: # ุจุฏุก ูุชูุฉ try ูุงุญุชูุงุก ุงูููุฏ ุงูุฐู ูุฏ ูุณุจุจ ุฎุทุฃ.
        # ูุง ูุฌุจ ุฃู ูููู ุงูุนููุงู ูุงุจูุงู ูููุตูู
        s.connect(('10.255.255.255', 1)) # ูุญุงููุฉ ุงูุงุชุตุงู ุจุนููุงู IP ูููู ุบูุฑ ูุงุจู ูููุตูู.
        IP = s.getsockname()[0] # ูุธุงู ุงูุชุดุบูู ุณูููู ุจุชุนููู ุนููุงู IP ุงููุญูู ููููุจุณ ููุญุงููุฉ ูุฐุง ุงูุงุชุตุงูุ ููุญู ูุณุชุฎุฑุฌู ููุง.
    except Exception: # ูู ุญุงู ูุดู ูุญุงููุฉ ุงูุงุชุตุงู (ูุฃู ุณุจุจ).
        IP = '127.0.0.1' # ูุชู ุชุนููู ุนููุงู IP ุงูุงูุชุฑุงุถู (localhost) ูุญู ุจุฏูู.
    finally: # ูุฐุง ุงูุฌุฒุก ูู ุงูููุฏ ูุชู ุชูููุฐู ุฏุงุฆูุงูุ ุณูุงุก ูุฌุญ ุงูู try ุฃู ูุดู.
        s.close() # ุฅุบูุงู ุงูููุจุณ ูุชุญุฑูุฑ ุงูููุงุฑุฏ ุงูุชู ูุงู ูุณุชุฎุฏููุง.
    return IP # ุฅุฑุฌุงุน ุนููุงู IP ุงูุฐู ุชู ุงูุญุตูู ุนููู.

# --- ูุฆุฉ ุงูุฎุงุฏู (Server) - ุฃุตุจุญุช ุงูุขู ูุฑูุฒ ุงูุชุญูู ---
class Server: # ุชุนุฑูู ูุฆุฉ (Class) ุงูุฎุงุฏู ุงูุชู ุณุชุฏูุฑ ุฌูุณุฉ ุงูุฏุฑุฏุดุฉ ุจุฃููููุง.
    def __init__(self, host, video_port, audio_port, control_port): # ุงูุฏุงูุฉ ุงููููุดูุฆุฉ (constructor) ุงูุชู ูุชู ุงุณุชุฏุนุงุคูุง ุนูุฏ ุฅูุดุงุก ูุงุฆู ุฌุฏูุฏ ูู ูุฐู ุงููุฆุฉ.
        self.host = host # ุชุฎุฒูู ุนููุงู IP ุงูุฎุงุต ุจุงูุฎุงุฏู.
        self.ports = {'video': video_port, 'audio': audio_port, 'control': control_port} # ูุงููุณ ูุชุฎุฒูู ุฃุฑูุงู ุงูููุงูุฐ ููููุฏูู ูุงูุตูุช ูุงูุชุญูู.
        self.clients = {}  # ูุงููุณ ูุชุฎุฒูู ูุนูููุงุช ุงูุนููุงุก ุงููุชุตููู. ุงูููุชุงุญ ูู ุนููุงู ุงูุนููู (IP, port) ูุงููููุฉ ูู ูุนูููุงุชู (ูุซู ุงูุงุณู).
        self.admin_addr = (host, control_port) # ุนููุงู ุงููุดุฑู (admin) ูู ููุณ ุนููุงู ุงูุฎุงุฏู.
        self.running = False # ูุชุบูุฑ ููุทูู (boolean) ูุชุชุจุน ูุง ุฅุฐุง ูุงู ุงูุฎุงุฏู ูุนูู ุฃู ูุง.
        self.lock = threading.Lock() # ุฅูุดุงุก ููู (lock) ูููุน ุญุฏูุซ ุชุถุงุฑุจ ุนูุฏ ูุตูู ุฎููุท ูุชุนุฏุฏุฉ ุฅูู ุงูุจูุงูุงุช ุงููุดุชุฑูุฉ (ูุซู ูุงููุณ ุงูุนููุงุก) ูู ููุณ ุงูููุช.
        self.message_queue = queue.Queue()  # ุฅูุดุงุก ุทุงุจูุฑ ูุชุฎุฒูู ุงูุฑุณุงุฆูุ ููููู ุบูุฑ ูุณุชุฎุฏู ุญุงูููุง ูู ูุฐู ุงููุฆุฉ.

    def start(self): # ุฏุงูุฉ ูุจุฏุก ุชุดุบูู ุงูุฎุงุฏู.
        self.running = True # ุชุบููุฑ ุญุงูุฉ ุงูุฎุงุฏู ุฅูู "ูุนูู".
        self.sockets = {} # ูุงููุณ ูุชุฎุฒูู ูุงุฆูุงุช ุงูููุงุจุณ (sockets) ุงูุฎุงุตุฉ ุจุงูุฎุงุฏู.
        for medium in self.ports: # ุญููุฉ ุชูุฑุงุฑูุฉ ุชูุฑ ุนูู ุฃููุงุน ุงูุงุชุตุงูุงุช (ููุฏููุ ุตูุชุ ุชุญูู).
            s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # ุฅูุดุงุก ููุจุณ UDP ููู ููุน ุงุชุตุงู.
            s.bind((self.host, self.ports[medium])) # ุฑุจุท ุงูููุจุณ ุจุนููุงู IP ููููุฐ ุงูุฎุงุฏูุ ููููู ุฌุงูุฒุงู ูุงุณุชูุจุงู ุงูุจูุงูุงุช ุนูู ูุฐุง ุงูุนููุงู.
            self.sockets[medium] = s # ุฅุถุงูุฉ ุงูููุจุณ ุงูุฐู ุชู ุฅูุดุงุคู ุฅูู ูุงููุณ ุงูููุงุจุณ.
            
            thread = threading.Thread(target=self.handle_stream, args=(medium,)) # ุฅูุดุงุก ุฎูุท (thread) ุฌุฏูุฏ ููู ููุจุณ. ูููุฉ ุงูุฎูุท ูู ุชุดุบูู ุฏุงูุฉ handle_stream.
            thread.daemon = True # ุฌุนู ุงูุฎูุท "ุฎูุทุงู ุฎุงุฏูุงู"ุ ููุง ูุนูู ุฃูู ุณูุชู ุฅุบูุงูู ุชููุงุฆูุงู ุนูุฏ ุฅุบูุงู ุงูุจุฑูุงูุฌ ุงูุฑุฆูุณู.
            thread.start() # ุจุฏุก ุชุดุบูู ุงูุฎูุท.
        
        print(f"โ ุงูุฎุงุฏู ูุนูู ุนูู ุงูุนููุงู: {self.host} ุจุงูููุงูุฐ: {self.ports}") # ุทุจุงุนุฉ ุฑุณุงูุฉ ุชุฃููุฏ ุจุฃู ุงูุฎุงุฏู ูุฏ ุจุฏุฃ ุจูุฌุงุญ.

    def stop(self): # ุฏุงูุฉ ูุฅููุงู ุงูุฎุงุฏู.
        self.running = False # ุชุบููุฑ ุญุงูุฉ ุงูุฎุงุฏู ุฅูู "ูุชููู" ูุฅููุงู ุงูุญููุงุช ุงูุชูุฑุงุฑูุฉ ูู ุงูุฎููุท.
        # ุฅุฑุณุงู ุฃูุฑ ุฅุบูุงู ูุฌููุน ุงูุนููุงุก
        for addr in list(self.clients.keys()): # ุญููุฉ ุชูุฑุงุฑูุฉ ุนูู ุฌููุน ุงูุนููุงุก ุงููุณุฌููู.
            self.send_control_message({'command': 'server_shutdown'}, addr) # ุฅุฑุณุงู ุฑุณุงูุฉ ุชุญูู ููู ุนููู ูุฅุนูุงูู ุจุฃู ุงูุฎุงุฏู ูุชู ุฅุบูุงูู.

        for s in self.sockets.values(): # ุญููุฉ ุชูุฑุงุฑูุฉ ุนูู ุฌููุน ููุงุจุณ ุงูุฎุงุฏู.
            s.close() # ุฅุบูุงู ูู ููุจุณ ูุชุญุฑูุฑ ุงููููุฐ ูุงูููุงุฑุฏ.
        print("๐ ุชู ุฅููุงู ุงูุฎุงุฏู.") # ุทุจุงุนุฉ ุฑุณุงูุฉ ุชุฃููุฏ ุจุฃู ุงูุฎุงุฏู ูุฏ ุชููู.

    def handle_stream(self, medium): # ุงูุฏุงูุฉ ุงูุชู ุชุนูู ุฏุงุฎู ูู ุฎูุท ูู ุฎููุท ุงูุฎุงุฏูุ ูุณุคููุฉ ุนู ุงุณุชูุจุงู ุงูุจูุงูุงุช.
        sock = self.sockets[medium] # ุงูุญุตูู ุนูู ุงูููุจุณ ุงูููุงุณุจ ูู ุงููุงููุณ ุจูุงุกู ุนูู ููุน ุงูุจูุงูุงุช (ููุฏููุ ุตูุชุ ุชุญูู).
        while self.running: # ุญููุฉ ุชูุฑุงุฑูุฉ ุชุณุชูุฑ ุทุงููุง ุฃู ุงูุฎุงุฏู ูู ุญุงูุฉ "ูุนูู".
            try: # ุจุฏุก ูุชูุฉ try ูุงุญุชูุงุก ุงูููุฏ ุงูุฐู ูุฏ ูุณุจุจ ุฎุทุฃ.
                data, addr = sock.recvfrom(65536) # ุงูุชุธุงุฑ ูุงุณุชูุจุงู ุงูุจูุงูุงุช ูู ุฃู ุนููู. `recvfrom` ุชุนูุฏ ุงูุจูุงูุงุช ูุนููุงู ุงููุฑุณู.
                if not self.running: break # ุฅุฐุง ุชู ุฅููุงู ุงูุฎุงุฏู ุฃุซูุงุก ุงูุชุธุงุฑ ุงูุจูุงูุงุชุ ุงุฎุฑุฌ ูู ุงูุญููุฉ.
                
                if medium == 'control': # ุฅุฐุง ูุงูุช ุงูุจูุงูุงุช ูุงุฏูุฉ ุนุจุฑ ูููุฐ ุงูุชุญูู.
                    self.process_control_message(data, addr) # ุงุณุชุฏุนุงุก ุฏุงูุฉ ูุนุงูุฌุฉ ุฑุณุงุฆู ุงูุชุญูู.
                else: # ุฅุฐุง ูุงูุช ุงูุจูุงูุงุช ููุฏูู ุฃู ุตูุช.
                    # ุฅุถุงูุฉ ุงูุนููู ุฅุฐุง ูู ููู ููุฌูุฏุงู (ููุงุชุตุงูุงุช ุงูุฃููู)
                    if addr not in self.clients: # ุงูุชุญูู ููุง ุฅุฐุง ูุงู ูุฐุง ุงูุนููู ุฌุฏูุฏุงู.
                        self.add_client(addr, "ูุดุงุฑู ุฌุฏูุฏ") # ุฅุถุงูุฉ ุงูุนููู ุงูุฌุฏูุฏ ุฅูู ุงููุงุฆูุฉ ุจุงุณู ุงูุชุฑุงุถู.
                    # ุจุซ ุงูุจูุงูุงุช ููุขุฎุฑูู
                    self.broadcast(data, addr, medium) # ุฅุนุงุฏุฉ ุฅุฑุณุงู (ุจุซ) ุงูุจูุงูุงุช ุงููุณุชููุฉ ุฅูู ุฌููุน ุงูุนููุงุก ุงูุขุฎุฑูู.
            except Exception as e: # ูู ุญุงู ุญุฏูุซ ุฃู ุฎุทุฃ ุฃุซูุงุก ุงุณุชูุจุงู ุงูุจูุงูุงุช.
                if self.running: print(f"ุฎุทุฃ ูู ุงูุฎุงุฏู ({medium}): {e}") # ุทุจุงุนุฉ ุฑุณุงูุฉ ุงูุฎุทุฃ ุฅุฐุง ูุงู ุงูุฎุงุฏู ูุง ูุฒุงู ูุนูู.
                break # ุงูุฎุฑูุฌ ูู ุงูุญููุฉ ูู ุญุงูุฉ ุญุฏูุซ ุฎุทุฃ.

    def process_control_message(self, data, addr): # ุฏุงูุฉ ููุนุงูุฌุฉ ุฑุณุงุฆู ุงูุฃูุงูุฑ ูุงูุชุญูู.
        try: # ุจุฏุก ูุชูุฉ try ูุงุญุชูุงุก ุงูููุฏ ุงูุฐู ูุฏ ูุณุจุจ ุฎุทุฃ.
            message = pickle.loads(data) # ูู "ุชุบููู" ุงูุจูุงูุงุช ุงููุณุชููุฉ (ุงูุชู ุชู ุฅุฑุณุงููุง ุจุงุณุชุฎุฏุงู pickle) ูุชุญููููุง ูุฑุฉ ุฃุฎุฑู ุฅูู ูุงุฆู ุจุงูุซูู.
            command = message.get('command') # ุงูุญุตูู ุนูู ููุน ุงูุฃูุฑ ูู ุงูุฑุณุงูุฉ.

            if command == 'join': # ุฅุฐุง ูุงู ุงูุฃูุฑ ูู "ุงูุถูุงู".
                self.add_client(addr, message.get('name', 'ูุฌููู')) # ุฅุถุงูุฉ ุงูุนููู ุงูุฌุฏูุฏ ุฅูู ูุงุฆูุฉ ุงูุนููุงุก.
            
            elif command == 'leave': # ุฅุฐุง ูุงู ุงูุฃูุฑ ูู "ูุบุงุฏุฑุฉ".
                self.remove_client(addr) # ุฅุฒุงูุฉ ุงูุนููู ูู ูุงุฆูุฉ ุงูุนููุงุก.
                
            elif command == 'mute_status': # ุฅุฐุง ูุงู ุงูุฃูุฑ ูู "ุญุงูุฉ ุงููุชู".
                # ุฅุฑุณุงู ุฅุดุนุงุฑ ูุชู ุงูุตูุช ููุฌููุน
                client_name = self.clients.get(addr, {}).get('name', 'ูุฌููู') # ุงูุญุตูู ุนูู ุงุณู ุงูุนููู ุงูุฐู ุฃุฑุณู ุงูุญุงูุฉ.
                mute_status = message.get('status', False) # ุงูุญุตูู ุนูู ุญุงูุฉ ุงููุชู (ุตุงูุช ุฃู ูุง).
                status_text = "ูุชู" if mute_status else "ุฅูุบุงุก ูุชู" # ุชุญุฏูุฏ ูุต ุงูุฅุดุนุงุฑ ุจูุงุกู ุนูู ุงูุญุงูุฉ.
                notification = f"ุชู {status_text} ุตูุช {client_name}" # ุฅูุดุงุก ุฑุณุงูุฉ ุงูุฅุดุนุงุฑ ุงููุงููุฉ.
                
                # ุฅุฑุณุงู ุงูุฅุดุนุงุฑ ูุฌููุน ุงูุนููุงุก ุจูุง ูููู ุงููุดุฑู
                for client_addr in list(self.clients.keys()): # ุญููุฉ ุชูุฑุงุฑูุฉ ุนูู ุฌููุน ุงูุนููุงุก.
                    self.send_control_message({ # ุฅูุดุงุก ุฑุณุงูุฉ ุฅุดุนุงุฑ.
                        'command': 'notification', 
                        'message': notification
                    }, client_addr) # ุฅุฑุณุงู ุฑุณุงูุฉ ุงูุฅุดุนุงุฑ ุฅูู ุงูุนููู.

            # ุฃูุงูุฑ ุงููุดุฑู
            elif addr[0] == self.host: # ุงูุชุญูู ูู ุฃู ุงูุฑุณุงูุฉ ูุงุฏูุฉ ูู ุงููุดุฑู (ุนู ุทุฑูู ููุงุฑูุฉ IP ุงููุฑุณู ุจู IP ุงูุฎุงุฏู).
                target_addr = tuple(message.get('target_addr')) # ุงูุญุตูู ุนูู ุนููุงู ุงูุนููู ุงููุณุชูุฏู ุจุงูุฅุฌุฑุงุก.
                if command == 'admin_mute': # ุฅุฐุง ูุงู ุงูุฃูุฑ ูู "ูุชู ูู ูุจู ุงููุดุฑู".
                    self.send_control_message({'command': 'force_mute', 'status': True}, target_addr) # ุฅุฑุณุงู ุฃูุฑ "ูุชู ุฅุฌุจุงุฑู" ููุนููู ุงููุณุชูุฏู.
                elif command == 'admin_unmute': # ุฅุฐุง ูุงู ุงูุฃูุฑ ูู "ุฅูุบุงุก ูุชู ูู ูุจู ุงููุดุฑู".
                    self.send_control_message({'command': 'force_mute', 'status': False}, target_addr) # ุฅุฑุณุงู ุฃูุฑ "ุฅูุบุงุก ูุชู ุฅุฌุจุงุฑู".
                elif command == 'admin_stop_video': # ุฅุฐุง ูุงู ุงูุฃูุฑ ูู "ุฅููุงู ูุงููุฑุง ูู ูุจู ุงููุดุฑู".
                    self.send_control_message({'command': 'force_video_off', 'status': True}, target_addr) # ุฅุฑุณุงู ุฃูุฑ "ุฅููุงู ูุงููุฑุง ุฅุฌุจุงุฑู".
                elif command == 'admin_start_video': # ุฅุฐุง ูุงู ุงูุฃูุฑ ูู "ุชุดุบูู ูุงููุฑุง ูู ูุจู ุงููุดุฑู".
                    self.send_control_message({'command': 'force_video_off', 'status': False}, target_addr) # ุฅุฑุณุงู ุฃูุฑ "ุชุดุบูู ูุงููุฑุง ุฅุฌุจุงุฑู".
                elif command == 'admin_kick': # ุฅุฐุง ูุงู ุงูุฃูุฑ ูู "ุทุฑุฏ ูู ูุจู ุงููุดุฑู".
                    self.send_control_message({'command': 'kick'}, target_addr) # ุฅุฑุณุงู ุฃูุฑ "ุทุฑุฏ" ููุนููู ุงููุณุชูุฏู.
                    self.remove_client(target_addr) # ุฅุฒุงูุฉ ุงูุนููู ุงููุทุฑูุฏ ูู ูุงุฆูุฉ ุงูุฎุงุฏู.

        except Exception as e: # ูู ุญุงู ุญุฏูุซ ุฃู ุฎุทุฃ ุฃุซูุงุก ูุนุงูุฌุฉ ุงูุฑุณุงูุฉ.
            print(f"ุฎุทุฃ ูู ูุนุงูุฌุฉ ุฑุณุงูุฉ ุงูุชุญูู: {e}") # ุทุจุงุนุฉ ุฑุณุงูุฉ ุงูุฎุทุฃ.

    def add_client(self, addr, name): # ุฏุงูุฉ ูุฅุถุงูุฉ ุนููู ุฌุฏูุฏ.
        with self.lock: # ุงุณุชุฎุฏุงู ุงูููู ูุถูุงู ุนุฏู ุญุฏูุซ ุชุถุงุฑุจ ูู ุงูุจูุงูุงุช.
            if addr not in self.clients: # ุงูุชุญูู ูู ุฃู ุงูุนููู ุบูุฑ ููุฌูุฏ ุจุงููุนู.
                self.clients[addr] = {'name': name} # ุฅุถุงูุฉ ุงูุนููู ุฅูู ูุงููุณ ุงูุนููุงุก.
                print(f"โ ุงูุถู: {name} ({addr})") # ุทุจุงุนุฉ ุฑุณุงูุฉ ูู ุทุฑููุฉ ุงูุฎุงุฏู.
                
                # ุฅุฑุณุงู ุฅุดุนุงุฑ ุงูุงูุถูุงู ููุฌููุน
                notification = f"ุงูุถู {name} ุฅูู ุงูุฏุฑุฏุดุฉ" # ุฅูุดุงุก ุฑุณุงูุฉ ุฅุดุนุงุฑ.
                for client_addr in list(self.clients.keys()): # ุญููุฉ ุชูุฑุงุฑูุฉ ุนูู ุฌููุน ุงูุนููุงุก.
                    self.send_control_message({ # ุฅูุดุงุก ุฑุณุงูุฉ ุงูุฅุดุนุงุฑ.
                        'command': 'notification', 
                        'message': notification
                    }, client_addr) # ุฅุฑุณุงู ุงูุฅุดุนุงุฑ ููุนููู.
                
                self.broadcast_client_list() # ุงุณุชุฏุนุงุก ุฏุงูุฉ ูุชุญุฏูุซ ูุงุฆูุฉ ุงูุนููุงุก ูุฏู ุงููุดุฑู.

    def remove_client(self, addr): # ุฏุงูุฉ ูุฅุฒุงูุฉ ุนููู.
        with self.lock: # ุงุณุชุฎุฏุงู ุงูููู ูุถูุงู ุนุฏู ุญุฏูุซ ุชุถุงุฑุจ ูู ุงูุจูุงูุงุช.
            if addr in self.clients: # ุงูุชุญูู ูู ูุฌูุฏ ุงูุนููู ูู ุงููุงุฆูุฉ.
                name = self.clients[addr]['name'] # ุงูุญุตูู ุนูู ุงุณู ุงูุนููู ูุจู ุญุฐูู.
                del self.clients[addr] # ุญุฐู ุงูุนููู ูู ูุงููุณ ุงูุนููุงุก.
                print(f"โ ุบุงุฏุฑ: {name} ({addr})") # ุทุจุงุนุฉ ุฑุณุงูุฉ ูู ุทุฑููุฉ ุงูุฎุงุฏู.
                
                # ุฅุฑุณุงู ุฅุดุนุงุฑ ุงููุบุงุฏุฑุฉ ููุฌููุน
                notification = f"ุบุงุฏุฑ {name} ุงูุฏุฑุฏุดุฉ" # ุฅูุดุงุก ุฑุณุงูุฉ ุฅุดุนุงุฑ ุจุงููุบุงุฏุฑุฉ.
                for client_addr in list(self.clients.keys()): # ุญููุฉ ุชูุฑุงุฑูุฉ ุนูู ุงูุนููุงุก ุงููุชุจููู.
                    self.send_control_message({ # ุฅูุดุงุก ุฑุณุงูุฉ ุงูุฅุดุนุงุฑ.
                        'command': 'notification', 
                        'message': notification
                    }, client_addr) # ุฅุฑุณุงู ุงูุฅุดุนุงุฑ ููุนููู.
                
                self.broadcast_client_list() # ุงุณุชุฏุนุงุก ุฏุงูุฉ ูุชุญุฏูุซ ูุงุฆูุฉ ุงูุนููุงุก ูุฏู ุงููุดุฑู.

    def broadcast_client_list(self): # ุฏุงูุฉ ูุฅุฑุณุงู ูุงุฆูุฉ ุงูุนููุงุก ุงููุญุฏุซุฉ.
        # ูุฑุณู ูุงุฆูุฉ ุงูุนููุงุก ุงููุญุฏุซุฉ ูููุดุฑู ููุท
        client_list_for_admin = {str(k): v for k, v in self.clients.items()} # ุชุญููู ูุงููุณ ุงูุนููุงุก ุฅูู ุตูุบุฉ ููุงุณุจุฉ ููุฅุฑุณุงู (ุชุญููู ุงูููุชุงุญ tuple ุฅูู ูุต).
        admin_addr = (self.host, self.ports['control']) # ุชุญุฏูุฏ ุนููุงู ุงููุดุฑู.
        self.send_control_message({'command': 'update_list', 'clients': client_list_for_admin}, admin_addr) # ุฅุฑุณุงู ุงููุงุฆูุฉ ุงููุญุฏุซุฉ ุฅูู ุงููุดุฑู.

    def send_control_message(self, message, addr): # ุฏุงูุฉ ูุณุงุนุฏุฉ ูุฅุฑุณุงู ุฑุณุงุฆู ุงูุชุญูู.
        try: # ุจุฏุก ูุชูุฉ try ูุงุญุชูุงุก ุงูููุฏ ุงูุฐู ูุฏ ูุณุจุจ ุฎุทุฃ.
            self.sockets['control'].sendto(pickle.dumps(message), addr) # "ุชุบููู" ุงูุฑุณุงูุฉ ุจุงุณุชุฎุฏุงู pickle ูุฅุฑุณุงููุง ุฅูู ุงูุนููุงู ุงููุญุฏุฏ ุนุจุฑ ููุจุณ ุงูุชุญูู.
        except Exception as e: # ูู ุญุงู ูุดู ุงูุฅุฑุณุงู.
            print(f"ูุดู ุฅุฑุณุงู ุฑุณุงูุฉ ุงูุชุญูู ุฅูู {addr}: {e}") # ุทุจุงุนุฉ ุฑุณุงูุฉ ุฎุทุฃ.

    def broadcast(self, data, sender_addr, medium): # ุฏุงูุฉ ูุจุซ (ุฅุนุงุฏุฉ ุฅุฑุณุงู) ุจูุงูุงุช ุงูููุฏูู ุฃู ุงูุตูุช ููุฌููุน.
        sock = self.sockets[medium] # ุงูุญุตูู ุนูู ุงูููุจุณ ุงูููุงุณุจ (ููุฏูู ุฃู ุตูุช).
        for addr in list(self.clients.keys()): # ุญููุฉ ุชูุฑุงุฑูุฉ ุนูู ุฌููุน ุงูุนููุงุก.
            # ูุง ุชุฑุณู ุงูุจูุงูุงุช ุฅูู ุงููุฑุณู ููุณู
            if addr != sender_addr: # ุงูุชุญูู ูู ุฃู ุนููุงู ุงูุนููู ุงูุญุงูู ูู ุงูุญููุฉ ููุณ ูู ููุณู ุนููุงู ูุฑุณู ุงูุจูุงูุงุช ุงูุฃุตูู.
                try: # ุจุฏุก ูุชูุฉ try ูุงุญุชูุงุก ุงูููุฏ ุงูุฐู ูุฏ ูุณุจุจ ุฎุทุฃ.
                    sock.sendto(data, addr) # ุฅุฑุณุงู ุงูุจูุงูุงุช ุฅูู ุงูุนููู.
                except Exception as e: # ูู ุญุงู ูุดู ุงูุฅุฑุณุงู.
                    print(f"ูุดู ูู ุจุซ ุงูุจูุงูุงุช ุฅูู {addr}: {e}") # ุทุจุงุนุฉ ุฑุณุงูุฉ ุฎุทุฃ.


# --- ูุฆุฉ ุงูุชุทุจูู ุงูุฑุฆูุณูุฉ (GUI) ---
class ChatApp(ttk.Window): # ุชุนุฑูู ูุฆุฉ ุงูุชุทุจูู ุงูุฑุฆูุณูุฉ ุงูุชู ุชุฑุซ ูู ttk.Window ูุฅูุดุงุก ุงููุงูุฐุฉ ุงูุฃุณุงุณูุฉ.
    def __init__(self): # ุงูุฏุงูุฉ ุงููููุดูุฆุฉ (constructor) ูููุงุฌูุฉ ุงูุฑุณูููุฉ.
        super().__init__(themename="superhero", title="ุชุทุจูู ุงูุงุชุตุงู ุงูุฌูุงุนู2") # ุงุณุชุฏุนุงุก ูููุดูุฆ ุงููุฆุฉ ุงูุฃู ูุน ุชุญุฏูุฏ ุงูุณูุฉ (theme) ูุนููุงู ุงููุงูุฐุฉ.
        self.geometry("500x350") # ุชุญุฏูุฏ ุงูุฃุจุนุงุฏ ุงูุฃูููุฉ ูููุงูุฐุฉ.
        self.protocol("WM_DELETE_WINDOW", self.on_closing) # ุฑุจุท ุญุฏุซ ุฅุบูุงู ุงููุงูุฐุฉ (ุงูุถุบุท ุนูู ุฒุฑ X) ุจุฏุงูุฉ on_closing ูุชูููุฐ ุงูุฅุฌุฑุงุกุงุช ุงููุงุฒูุฉ ูุจู ุงูุฎุฑูุฌ.

        self.server = None # ูุชุบูุฑ ูุชุฎุฒูู ูุงุฆู ุงูุฎุงุฏู (ููุท ุฅุฐุง ูุงู ุงููุณุชุฎุฏู ูู ุงููุดุฑู).
        self.is_running = False # ูุชุบูุฑ ูุชุชุจุน ูุง ุฅุฐุง ูุงู ุงูุนููู ูุชุตูุงู ุญุงููุงู ุฃู ูุง.
        self.is_admin = False # ูุชุบูุฑ ูุชุญุฏูุฏ ูุง ุฅุฐุง ูุงู ุงููุณุชุฎุฏู ุงูุญุงูู ูู ุงููุดุฑู.
        
        self.video_port = 9999 # ุชุญุฏูุฏ ุฑูู ุงููููุฐ ุงูุงูุชุฑุงุถู ููููุฏูู.
        self.audio_port = 8888 # ุชุญุฏูุฏ ุฑูู ุงููููุฐ ุงูุงูุชุฑุงุถู ููุตูุช.
        self.control_port = 7777 # ุชุญุฏูุฏ ุฑูู ุงููููุฐ ุงูุงูุชุฑุงุถู ููุชุญูู.
        
        self.notification_queue = queue.Queue() # ุฅูุดุงุก ุทุงุจูุฑ ูุชููู ุงูุฅุดุนุงุฑุงุช ูู ุฎููุท ุงูุดุจูุฉ ูุนุฑุถูุง ุจุฃูุงู ูู ุงููุงุฌูุฉ ุงูุฑุณูููุฉ.
        self.after(100, self.process_notifications) # ุฌุฏููุฉ ุชุดุบูู ุฏุงูุฉ process_notifications ุจุนุฏ 100 ูููู ุซุงููุฉ ููุจุฏุก ูู ูุนุงูุฌุฉ ุงูุฅุดุนุงุฑุงุช.

        self.create_welcome_widgets() # ุงุณุชุฏุนุงุก ุฏุงูุฉ ูุฅูุดุงุก ูุงุฌูุฉ ุงูุจุฏุงูุฉ (ุดุงุดุฉ ุงูุชุฑุญูุจ).

    def process_notifications(self): # ุฏุงูุฉ ููุนุงูุฌุฉ ุงูุฅุดุนุงุฑุงุช ุงูููุฌูุฏุฉ ูู ุงูุทุงุจูุฑ.
        try: # ุจุฏุก ูุชูุฉ try.
            while True: # ุญููุฉ ููุญุงููุฉ ุชูุฑูุบ ุงูุทุงุจูุฑ ูู ูู ุงูุฑุณุงุฆู ุงูููุฌูุฏุฉ ููู.
                message = self.notification_queue.get_nowait() # ูุญุงููุฉ ุงูุญุตูู ุนูู ุฑุณุงูุฉ ูู ุงูุทุงุจูุฑ ุจุฏูู ุงูุชุธุงุฑ (ุฅุฐุง ูุงู ูุงุฑุบุงูุ ุณูุญุฏุซ ุฎุทุฃ).
                self.show_notification(message) # ุฅุฐุง ุชู ุงูุญุตูู ุนูู ุฑุณุงูุฉุ ูุชู ุนุฑุถูุง ูุฅุดุนุงุฑ.
        except queue.Empty: # ูุฐุง ุงูุฎุทุฃ ูุญุฏุซ ุนูุฏูุง ูููู ุงูุทุงุจูุฑ ูุงุฑุบุงูุ ููู ุฃูุฑ ุทุจูุนู.
            pass # ูุง ุชูุนู ุดูุฆุงูุ ููุท ุงุณุชูุฑ.
        finally: # ูุฐุง ุงูุฌุฒุก ูุชู ุชูููุฐู ุฏุงุฆูุงู.
            self.after(100, self.process_notifications) # ุฌุฏููุฉ ุชุดุบูู ูุฐู ุงูุฏุงูุฉ ูุฑุฉ ุฃุฎุฑู ุจุนุฏ 100 ูููู ุซุงููุฉ ููุชุญูู ูู ูุฌูุฏ ุฅุดุนุงุฑุงุช ุฌุฏูุฏุฉ.

    def show_notification(self, message): # ุฏุงูุฉ ูุนุฑุถ ูุงูุฐุฉ ููุจุซูุฉ ูุฅุดุนุงุฑ.
        # ุฅูุดุงุก ูุงูุฐุฉ ููุจุซูุฉ ููุฅุดุนุงุฑ
        top = ttk.Toplevel(self) # ุฅูุดุงุก ูุงูุฐุฉ ุฌุฏูุฏุฉ ููู ุงููุงูุฐุฉ ุงูุฑุฆูุณูุฉ.
        top.title("ุฅุดุนุงุฑ") # ุชุญุฏูุฏ ุนููุงู ุงููุงูุฐุฉ ุงูููุจุซูุฉ.
        top.geometry("300x100") # ุชุญุฏูุฏ ุฃุจุนุงุฏ ุงููุงูุฐุฉ ุงูููุจุซูุฉ.
        top.transient(self) # ุฑุจุท ุงููุงูุฐุฉ ุงูููุจุซูุฉ ุจุงููุงูุฐุฉ ุงูุฑุฆูุณูุฉ (ุชุจูู ููููุง ุฏุงุฆูุงู).
        top.grab_set() # ุฌุนู ุงููุงูุฐุฉ ุงูููุจุซูุฉ "ูุดุฑูุทุฉ" (modal)ุ ุฃู ูุง ูููู ุงูุชูุงุนู ูุน ุงููุงูุฐุฉ ุงูุฑุฆูุณูุฉ ุญุชู ูุชู ุฅุบูุงููุง.
        
        ttk.Label(top, text=message, padding=10).pack(expand=True) # ุฅุถุงูุฉ ููุตู (label) ูุนุฑุถ ูุต ุงูุฅุดุนุงุฑ ุฏุงุฎู ุงููุงูุฐุฉ.
        ttk.Button(top, text="ููุงูู", command=top.destroy, bootstyle=SUCCESS).pack(pady=5) # ุฅุถุงูุฉ ุฒุฑ "ููุงูู" ูุฅุบูุงู ุงููุงูุฐุฉ.
        
        # ุฅุบูุงู ุงููุงูุฐุฉ ุชููุงุฆูุงู ุจุนุฏ 3 ุซูุงู
        top.after(3000, top.destroy) # ุฌุฏููุฉ ุฅุบูุงู ุงููุงูุฐุฉ ุชููุงุฆูุงู ุจุนุฏ 3000 ูููู ุซุงููุฉ (3 ุซูุงู).

    def create_welcome_widgets(self): # ุฏุงูุฉ ูุฅูุดุงุก ุนูุงุตุฑ ูุงุฌูุฉ ุดุงุดุฉ ุงูุจุฏุงูุฉ.
        self.welcome_frame = ttk.Frame(self, padding=20) # ุฅูุดุงุก ุฅุทุงุฑ (frame) ูุงุญุชูุงุก ุนูุงุตุฑ ุงููุงุฌูุฉ.
        self.welcome_frame.pack(expand=True, fill=BOTH) # ูุถุน ุงูุฅุทุงุฑ ูู ุงููุงูุฐุฉ ูุชูุณูุนู ูููุก ุงููุณุงุญุฉ ุงููุชุงุญุฉ.

        ttk.Label(self.welcome_frame, text="ูุฑุญุจุงู ุจู ูู ุชุทุจูู ุงูุงุชุตุงู", font=("Helvetica", 16, "bold")).pack(pady=10) # ุฅุถุงูุฉ ุนููุงู ุชุฑุญูุจู.
        
        ttk.Button(self.welcome_frame, text="๐ ุฅูุดุงุก ุฌูุณุฉ (ูุดุฑู)", command=self.start_server, bootstyle=SUCCESS).pack(pady=10, fill=X, ipady=5) # ุฅุถุงูุฉ ุฒุฑ "ุฅูุดุงุก ุฌูุณุฉ" ูุฑุจุทู ุจุฏุงูุฉ start_server.
        
        ttk.Separator(self.welcome_frame, orient=HORIZONTAL).pack(pady=10, fill=X) # ุฅุถุงูุฉ ุฎุท ูุงุตู ุฃููู.

        f = ttk.Frame(self.welcome_frame) # ุฅูุดุงุก ุฅุทุงุฑ ูุฑุนู ูุชูุธูู ุญูู ุงูุฅุฏุฎุงู ูุงูููุตู ุงูุฎุงุต ุจู.
        f.pack(pady=5, fill=X, expand=True) # ูุถุน ุงูุฅุทุงุฑ ุงููุฑุนู ูู ุงููุงูุฐุฉ.
        ttk.Label(f, text="ุฃุฏุฎู IP ุงูุฎุงุฏู:").pack(side=RIGHT, padx=5) # ุฅุถุงูุฉ ููุตู "ุฃุฏุฎู IP ุงูุฎุงุฏู".
        self.ip_entry = ttk.Entry(f, bootstyle=INFO) # ุฅูุดุงุก ุญูู ูุฅุฏุฎุงู ุงููุต (IP).
        self.ip_entry.pack(side=LEFT, fill=X, expand=True) # ูุถุน ุญูู ุงูุฅุฏุฎุงู ูู ุงููุงูุฐุฉ.
        self.ip_entry.insert(0, "127.0.0.1")  # ูุถุน ูููุฉ ุงูุชุฑุงุถูุฉ (localhost) ูู ุญูู ุงูุฅุฏุฎุงู.
        
        ttk.Button(self.welcome_frame, text="๐ ุงูุงูุถูุงู ูุฌูุณุฉ", command=self.show_join_options, bootstyle=PRIMARY).pack(pady=10, fill=X, ipady=5) # ุฅุถุงูุฉ ุฒุฑ "ุงูุงูุถูุงู ูุฌูุณุฉ" ูุฑุจุทู ุจุฏุงูุฉ show_join_options.

    def start_server(self): # ุฏุงูุฉ ูุชู ุงุณุชุฏุนุงุคูุง ุนูุฏ ุงูุถุบุท ุนูู ุฒุฑ "ุฅูุดุงุก ุฌูุณุฉ".
        try: # ุจุฏุก ูุชูุฉ try ูุงุญุชูุงุก ุงูููุฏ ุงูุฐู ูุฏ ูุณุจุจ ุฎุทุฃ.
            self.is_admin = True # ุชุนููู ุงููุณุชุฎุฏู ุงูุญุงูู ููุดุฑู.
            host_ip = get_local_ip() # ุงูุญุตูู ุนูู ุนููุงู IP ุงููุญูู ููุฌูุงุฒ.
            self.server = Server(host_ip, self.video_port, self.audio_port, self.control_port) # ุฅูุดุงุก ูุงุฆู ุฌุฏูุฏ ูู ูุฆุฉ ุงูุฎุงุฏู.
            self.server.start() # ุจุฏุก ุชุดุบูู ุงูุฎุงุฏู.
            
            # ุจุฏุก ุงูุนููู ุจุนุฏ ุชุฃููุฏ ุฃู ุงูุฎุงุฏู ูุนูู
            self.after(100, lambda: self.start_client(host_ip, "ุงููุดุฑู ๐", True, True)) # ุฌุฏููุฉ ุจุฏุก ุงูุนููู ุงูุฎุงุต ุจุงููุดุฑู ุจุนุฏ ูุชุฑุฉ ูุตูุฑุฉ ููุชุฃูุฏ ูู ุฃู ุงูุฎุงุฏู ุฌุงูุฒ.
            
        except Exception as e: # ูู ุญุงู ุญุฏูุซ ุฎุทุฃ ุฃุซูุงุก ุจุฏุก ุงูุฎุงุฏู.
            messagebox.showerror("ุฎุทุฃ", f"ูุดู ูู ุจุฏุก ุงูุฎุงุฏู: {e}") # ุนุฑุถ ุฑุณุงูุฉ ุฎุทุฃ ูููุณุชุฎุฏู.
            print(f"ุฎุทุฃ ูู ุจุฏุก ุงูุฎุงุฏู: {e}") # ุทุจุงุนุฉ ุงูุฎุทุฃ ูู ุงูุทุฑููุฉ ูููุทูุฑ.

    def show_join_options(self): # ุฏุงูุฉ ูุชู ุงุณุชุฏุนุงุคูุง ุนูุฏ ุงูุถุบุท ุนูู ุฒุฑ "ุงูุงูุถูุงู ูุฌูุณุฉ".
        server_ip = self.ip_entry.get() # ุงูุญุตูู ุนูู ุนููุงู IP ุงูุฐู ุฃุฏุฎูู ุงููุณุชุฎุฏู.
        if not server_ip: # ุงูุชุญูู ูู ุฃู ุงููุณุชุฎุฏู ุฃุฏุฎู ุนููุงู IP.
            messagebox.showerror("ุฎุทุฃ", "ุงูุฑุฌุงุก ุฅุฏุฎุงู ุนููุงู IP ุงูุฎุงุต ุจุงูุฎุงุฏู") # ุนุฑุถ ุฑุณุงูุฉ ุฎุทุฃ ุฅุฐุง ูุงู ุงูุญูู ูุงุฑุบุงู.
            return # ุงูุฎุฑูุฌ ูู ุงูุฏุงูุฉ.

        name = simpledialog.askstring("ุงุณูู", "ุงูุฑุฌุงุก ุฅุฏุฎุงู ุงุณูู:", parent=self) # ุนุฑุถ ูุฑุจุน ุญูุงุฑ ูุทูุจ ุงุณู ุงููุณุชุฎุฏู.
        if not name: return # ุฅุฐุง ุฃุบูู ุงููุณุชุฎุฏู ุงููุฑุจุน ุฃู ูู ูุฏุฎู ุงุณูุงูุ ุงุฎุฑุฌ ูู ุงูุฏุงูุฉ.

        # ูุงูุฐุฉ ููุจุซูุฉ ูุงุฎุชูุงุฑุงุช ุงูุงูุถูุงู
        top = ttk.Toplevel(self) # ุฅูุดุงุก ูุงูุฐุฉ ููุจุซูุฉ ุฌุฏูุฏุฉ.
        top.title("ุฎูุงุฑุงุช ุงูุงูุถูุงู") # ุชุญุฏูุฏ ุนููุงู ุงููุงูุฐุฉ.
        top.geometry("300x250") # ุชุญุฏูุฏ ุฃุจุนุงุฏ ุงููุงูุฐุฉ.
        ttk.Label(top, text="ููู ุชุฑูุฏ ุงูุงูุถูุงูุ", font=("Helvetica", 14)).pack(pady=10) # ุฅุถุงูุฉ ููุตู ุชูุถูุญู.
        
        video_var = tk.BooleanVar(value=True) # ุฅูุดุงุก ูุชุบูุฑ ููุทูู ูุชุฎุฒูู ุญุงูุฉ ุฎูุงุฑ ุงููุงููุฑุง (ุงูุชุฑุงุถูุงู ููุนู).
        audio_var = tk.BooleanVar(value=True) # ุฅูุดุงุก ูุชุบูุฑ ููุทูู ูุชุฎุฒูู ุญุงูุฉ ุฎูุงุฑ ุงูุตูุช (ุงูุชุฑุงุถูุงู ููุนู).
        
        ttk.Checkbutton(top, text="ุงููุดุงุฑูุฉ ุจุงููุงููุฑุง", variable=video_var, bootstyle="round-toggle").pack(pady=5) # ุฅุถุงูุฉ ูุฑุจุน ุงุฎุชูุงุฑ ูููุงููุฑุง.
        ttk.Checkbutton(top, text="ุงููุดุงุฑูุฉ ุจุงูุตูุช", variable=audio_var, bootstyle="round-toggle").pack(pady=5) # ุฅุถุงูุฉ ูุฑุจุน ุงุฎุชูุงุฑ ููุตูุช.

        def on_join(): # ุชุนุฑูู ุฏุงูุฉ ุฏุงุฎููุฉ ููุชู ุงุณุชุฏุนุงุคูุง ุนูุฏ ุงูุถุบุท ุนูู ุฒุฑ ุงูุงูุถูุงู ูู ุงููุงูุฐุฉ ุงูููุจุซูุฉ.
            top.destroy() # ุฅุบูุงู ุงููุงูุฐุฉ ุงูููุจุซูุฉ.
            self.start_client(server_ip, name, video_var.get(), audio_var.get()) # ุจุฏุก ุงูุนููู ูุน ุงูุฎูุงุฑุงุช ุงูุชู ุญุฏุฏูุง ุงููุณุชุฎุฏู.

        ttk.Button(top, text="ุงูุถูุงู", command=on_join, bootstyle=SUCCESS).pack(pady=20) # ุฅุถุงูุฉ ุฒุฑ "ุงูุถูุงู" ูุฑุจุทู ุจุฏุงูุฉ on_join.
        
    def start_client(self, server_ip, name, join_with_video, join_with_audio): # ุฏุงูุฉ ูุจุฏุก ุชุดุบูู ุงูุนููู (ุณูุงุก ูุงู ูุดุฑูุงู ุฃู ูุดุงุฑูุงู).
        try: # ุจุฏุก ูุชูุฉ try ูุงุญุชูุงุก ุงูููุฏ ุงูุฐู ูุฏ ูุณุจุจ ุฎุทุฃ.
            self.is_running = True # ุชุนููู ุญุงูุฉ ุงูุนููู ุฅูู "ูุนูู".
            if hasattr(self, 'welcome_frame'): # ุงูุชุญูู ูู ูุฌูุฏ ุฅุทุงุฑ ุดุงุดุฉ ุงูุชุฑุญูุจ.
                self.welcome_frame.destroy() # ุฅุฒุงูุฉ ุฅุทุงุฑ ุดุงุดุฉ ุงูุชุฑุญูุจ ููุงูุชูุงู ุฅูู ูุงุฌูุฉ ุงูุฏุฑุฏุดุฉ.
            self.create_chat_widgets() # ุฅูุดุงุก ุนูุงุตุฑ ูุงุฌูุฉ ุงูุฏุฑุฏุดุฉ.
            self.setup_client_threads(server_ip, name, join_with_video, join_with_audio) # ุฅุนุฏุงุฏ ูุจุฏุก ุฎููุท ุงูุดุจูุฉ ูุงูุตูุช ูุงูููุฏูู.
        except Exception as e: # ูู ุญุงู ุญุฏูุซ ุฎุทุฃ.
            messagebox.showerror("ุฎุทุฃ", f"ูุดู ูู ุจุฏุก ุงูุนููู: {e}") # ุนุฑุถ ุฑุณุงูุฉ ุฎุทุฃ.
            print(f"ุฎุทุฃ ูู ุจุฏุก ุงูุนููู: {e}") # ุทุจุงุนุฉ ุงูุฎุทุฃ ูู ุงูุทุฑููุฉ.

    def setup_client_threads(self, server_ip, name, send_video, send_audio): # ุฏุงูุฉ ูุฅุนุฏุงุฏ ุฎููุท ุงูุนููู.
        self.server_ip = server_ip # ุชุฎุฒูู ุนููุงู IP ุงูุฎุงุต ุจุงูุฎุงุฏู.
        self.name = name # ุชุฎุฒูู ุงุณู ุงููุณุชุฎุฏู.
        self.send_video_flag = send_video # ุชุฎุฒูู ุฎูุงุฑ ุฅุฑุณุงู ุงูููุฏูู.
        self.send_audio_flag = send_audio # ุชุฎุฒูู ุฎูุงุฑ ุฅุฑุณุงู ุงูุตูุช.
        
        # ุฅุนุฏุงุฏ ุงููุงููุฑุง ูุงูุตูุช
        self.p_audio = pyaudio.PyAudio() # ุชููุฆุฉ ูุงุฆู PyAudio ููุชุนุงูู ูุน ุงูุตูุช.
        self.chunk_size = 1024 # ุชุญุฏูุฏ ุญุฌู ูุทุนุฉ ุงูุจูุงูุงุช ุงูุตูุชูุฉ ุงูุชู ุณูุชู ูุฑุงุกุชูุง ูู ูู ูุฑุฉ.
        
        # ุฅูุดุงุก ููุงูุฐ ููุนููู (ูุฎุชููุฉ ุนู ููุงูุฐ ุงูุฎุงุฏู)
        client_ports = { # ุชุญุฏูุฏ ุฃุฑูุงู ููุงูุฐ ูุฎุชููุฉ ููุนููู ูุชุฌูุจ ุงูุชุนุงุฑุถ ูุน ุงูุฎุงุฏู ุฅุฐุง ูุงูุง ุนูู ููุณ ุงูุฌูุงุฒ.
            'video': self.video_port + 1,
            'audio': self.audio_port + 1,
            'control': self.control_port + 1
        }
        
        self.sockets = {} # ูุงููุณ ูุชุฎุฒูู ููุงุจุณ ุงูุนููู.
        for medium in client_ports: # ุญููุฉ ุชูุฑุงุฑูุฉ ูุฅูุดุงุก ุงูููุงุจุณ.
            s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # ุฅูุดุงุก ููุจุณ UDP.
            # ุฑุจุท ุงูููุงูุฐ ุงูุฎุงุตุฉ ุจุงูุนููู (ููุงุณุชูุจุงู ููุท)
            try: # ูุญุงููุฉ ุงูุฑุจุท ุจุงููููุฐ ุงููุญุฏุฏ.
                s.bind(('0.0.0.0', client_ports[medium])) # ุงูุฑุจุท ุจู '0.0.0.0' ูุนูู ุฃู ุงูููุจุณ ููููู ุงุณุชูุจุงู ุงูุจูุงูุงุช ูู ุฃู ูุงุฌูุฉ ุดุจูุฉ ุนูู ุงูุฌูุงุฒ.
            except: # ุฅุฐุง ูุงู ุงููููุฐ ูุญุฌูุฒุงู.
                # ุฅุฐุง ูุดู ุงูุฑุจุทุ ูุณุชุฎุฏู ูููุฐ ุนุดูุงุฆู
                s.bind(('0.0.0.0', 0)) # ุงูุฑุจุท ุจุงููููุฐ 0 ูุทูุจ ูู ูุธุงู ุงูุชุดุบูู ุงุฎุชูุงุฑ ุฃู ูููุฐ ูุชุงุญ.
            self.sockets[medium] = s # ุชุฎุฒูู ุงูููุจุณ ูู ุงููุงููุณ.
        
        self.is_muted = not send_audio # ุชุญุฏูุฏ ุงูุญุงูุฉ ุงูุฃูููุฉ ูููุชู (ุฅุฐุง ูู ูุฎุชุฑ ุงููุณุชุฎุฏู ุฅุฑุณุงู ุงูุตูุชุ ูุฅูู ูุนุชุจุฑ ุตุงูุชุงู).
        self.is_video_off = not send_video # ุชุญุฏูุฏ ุงูุญุงูุฉ ุงูุฃูููุฉ ูููุงููุฑุง (ุฅุฐุง ูู ูุฎุชุฑ ุงููุณุชุฎุฏู ุฅุฑุณุงู ุงูููุฏููุ ูุฅู ุงููุงููุฑุง ุชุนุชุจุฑ ูุชูููุฉ).
        self.remote_video_labels = {} # ูุงููุณ ูุชุฎุฒูู ููุตูุงุช ุงูููุฏูู ุงูุฎุงุตุฉ ุจุงููุดุงุฑููู ุงูุขุฎุฑูู.
        
        # ุฅุฑุณุงู ุทูุจ ุงูุถูุงู ููุฎุงุฏู
        join_message = {'command': 'join', 'name': self.name} # ุฅูุดุงุก ุฑุณุงูุฉ ุงูุงูุถูุงู.
        self.control_socket = self.sockets['control'] # ุงูุญุตูู ุนูู ููุจุณ ุงูุชุญูู.
        self.control_socket.sendto(pickle.dumps(join_message), (server_ip, self.control_port)) # ุฅุฑุณุงู ุฑุณุงูุฉ ุงูุงูุถูุงู ุฅูู ุงูุฎุงุฏู.

        # ุจุฏุก ุงูุฎููุท
        threads = [] # ูุงุฆูุฉ ูุชุฎุฒูู ุงูุฎููุท ุงูุชู ุณูุชู ุฅูุดุงุคูุง.
        # ุฎููุท ุงูุงุณุชูุจุงู ุชุนูู ุฏุงุฆูุงู
        threads.append(threading.Thread(target=self.receive_video)) # ุฅูุดุงุก ุฎูุท ูุงุณุชูุจุงู ุงูููุฏูู.
        threads.append(threading.Thread(target=self.receive_audio)) # ุฅูุดุงุก ุฎูุท ูุงุณุชูุจุงู ุงูุตูุช.
        threads.append(threading.Thread(target=self.receive_control)) # ุฅูุดุงุก ุฎูุท ูุงุณุชูุจุงู ุฑุณุงุฆู ุงูุชุญูู.
        
        if self.send_video_flag: # ุฅุฐุง ุงุฎุชุงุฑ ุงููุณุชุฎุฏู ุงููุดุงุฑูุฉ ุจุงููุงููุฑุง.
            self.cap = cv2.VideoCapture(0) # ุชููุฆุฉ ุงููุงููุฑุง (0 ุชุนูู ุงููุงููุฑุง ุงูุงูุชุฑุงุถูุฉ).
            if not self.cap.isOpened(): # ุงูุชุญูู ูู ูุฌุงุญ ุงูุงุชุตุงู ุจุงููุงููุฑุง.
                messagebox.showwarning("ุชุญุฐูุฑ", "ุชุนุฐุฑ ุงููุตูู ุฅูู ุงููุงููุฑุง") # ุนุฑุถ ุชุญุฐูุฑ ูู ุญุงู ุงููุดู.
                self.send_video_flag = False # ุชุนุทูู ุฅุฑุณุงู ุงูููุฏูู.
            else: # ุฅุฐุง ูุฌุญ ุงูุงุชุตุงู ุจุงููุงููุฑุง.
                threads.append(threading.Thread(target=self.send_video, args=(server_ip,))) # ุฅูุดุงุก ุฎูุท ูุฅุฑุณุงู ุงูููุฏูู.
        
        if self.send_audio_flag: # ุฅุฐุง ุงุฎุชุงุฑ ุงููุณุชุฎุฏู ุงููุดุงุฑูุฉ ุจุงูุตูุช.
            try: # ูุญุงููุฉ ุงููุตูู ูููููุฑูููู.
                self.audio_stream_in = self.p_audio.open(format=pyaudio.paInt16, channels=1, rate=20000, input=True, frames_per_buffer=self.chunk_size) # ูุชุญ ูุฌุฑู ุตูุชู ููุฅุฏุฎุงู (ุงููููุฑูููู).
                threads.append(threading.Thread(target=self.send_audio, args=(server_ip,))) # ุฅูุดุงุก ุฎูุท ูุฅุฑุณุงู ุงูุตูุช.
                self.mute_button.config(text="๐ค ูุชู ุงูุตูุช") # ุชุญุฏูุซ ูุต ุฒุฑ ูุชู ุงูุตูุช.
            except Exception as e: # ูู ุญุงู ูุดู ุงููุตูู ูููููุฑูููู.
                messagebox.showwarning("ุชุญุฐูุฑ", f"ุชุนุฐุฑ ุงููุตูู ุฅูู ุงููููุฑูููู: {e}") # ุนุฑุถ ุฑุณุงูุฉ ุชุญุฐูุฑ.
                self.send_audio_flag = False # ุชุนุทูู ุฅุฑุณุงู ุงูุตูุช.
                self.mute_button.config(text="๐ ุฃูุช ุตุงูุช", state=DISABLED) # ุชุนุทูู ุฒุฑ ูุชู ุงูุตูุช.
        else: # ุฅุฐุง ูู ูุฎุชุฑ ุงููุณุชุฎุฏู ุงููุดุงุฑูุฉ ุจุงูุตูุช ูู ุงูุจุฏุงูุฉ.
             self.mute_button.config(text="๐ ุฃูุช ุตุงูุช", state=DISABLED) # ุชุนุทูู ุฒุฑ ูุชู ุงูุตูุช.
        
        if not self.send_video_flag: # ุฅุฐุง ูู ูุชู ุชูุนูู ุฅุฑุณุงู ุงูููุฏูู (ุณูุงุก ุจุงุฎุชูุงุฑ ุงููุณุชุฎุฏู ุฃู ุจุณุจุจ ุฎุทุฃ).
            self.video_button.config(text="๐ท ุงููุงููุฑุง ูุบููุฉ", state=DISABLED) # ุชุนุทูู ุฒุฑ ุงููุงููุฑุง.

        try: # ูุญุงููุฉ ุงููุตูู ููุฎุฑุฌ ุงูุตูุช (ุงูุณูุงุนุงุช).
            self.audio_stream_out = self.p_audio.open(format=pyaudio.paInt16, channels=1, rate=20000, output=True, frames_per_buffer=self.chunk_size) # ูุชุญ ูุฌุฑู ุตูุชู ููุฅุฎุฑุงุฌ (ุงูุณูุงุนุงุช).
        except Exception as e: # ูู ุญุงู ูุดู ุงููุตูู ููุณูุงุนุงุช.
            messagebox.showwarning("ุชุญุฐูุฑ", f"ุชุนุฐุฑ ุงููุตูู ุฅูู ูุฎุฑุฌ ุงูุตูุช: {e}") # ุนุฑุถ ุฑุณุงูุฉ ุชุญุฐูุฑ.

        for t in threads: # ุญููุฉ ุชูุฑุงุฑูุฉ ุนูู ุฌููุน ุงูุฎููุท ุงูุชู ุชู ุฅูุดุงุคูุง.
            t.daemon = True # ุฌุนููุง ุฎููุทุงู ุฎุงุฏูุฉ.
            t.start() # ุจุฏุก ุชุดุบูู ุงูุฎููุท.

    def create_chat_widgets(self): # ุฏุงูุฉ ูุฅูุดุงุก ุนูุงุตุฑ ูุงุฌูุฉ ูุงูุฐุฉ ุงูุฏุฑุฏุดุฉ.
        self.title("ูุงูุฐุฉ ุงูุงุชุตุงู") # ุชุบููุฑ ุนููุงู ุงููุงูุฐุฉ.
        self.geometry("1000x750") # ุชุบููุฑ ุฃุจุนุงุฏ ุงููุงูุฐุฉ.
        
        main_frame = ttk.Frame(self) # ุฅูุดุงุก ุฅุทุงุฑ ุฑุฆูุณู ูุงุญุชูุงุก ูู ุงูุนูุงุตุฑ.
        main_frame.pack(fill=BOTH, expand=True) # ูุถุน ุงูุฅุทุงุฑ ูู ุงููุงูุฐุฉ.
        
        # ููุญุฉ ุชุญูู ุงููุดุฑู (ุชุธูุฑ ููุท ูููุดุฑู)
        if self.is_admin: # ุงูุชุญูู ููุง ุฅุฐุง ูุงู ุงููุณุชุฎุฏู ูู ุงููุดุฑู.
            admin_panel = ttk.Labelframe(main_frame, text="ููุญุฉ ุชุญูู ุงููุดุฑู", padding=10) # ุฅูุดุงุก ุฅุทุงุฑ ูุน ุชุณููุฉ ุฎุงุตุฉ ุจููุญุฉ ุชุญูู ุงููุดุฑู.
            admin_panel.pack(side=RIGHT, fill=Y, padx=10, pady=10) # ูุถุน ุงูููุญุฉ ุนูู ูููู ุงููุงูุฐุฉ.
            
            # ุนุฑุถ IP ุงููุดุฑู
            ip_frame = ttk.Frame(admin_panel) # ุฅูุดุงุก ุฅุทุงุฑ ูุฑุนู ูุนุฑุถ IP.
            ip_frame.pack(fill=X, pady=5) # ูุถุน ุงูุฅุทุงุฑ ุงููุฑุนู ูู ุงูููุญุฉ.
            ttk.Label(ip_frame, text="IP ุงููุดุฑู:", font=("Helvetica", 10, "bold")).pack(side=RIGHT) # ุฅุถุงูุฉ ููุตู.
            ttk.Label(ip_frame, text=get_local_ip(), font=("Helvetica", 10)).pack(side=RIGHT, padx=5) # ุฅุถุงูุฉ ููุตู ูุนุฑุถ IP ุงูุฎุงุฏู.
            
            ttk.Label(admin_panel, text="ูุงุฆูุฉ ุงููุดุงุฑููู:", font=("Helvetica", 10, "bold")).pack(anchor=W, pady=(10, 5)) # ุฅุถุงูุฉ ููุตู "ูุงุฆูุฉ ุงููุดุงุฑููู".
            
            # ุฅุทุงุฑ ูุนุฑุถ ูุงุฆูุฉ ุงููุดุงุฑููู
            list_frame = ttk.Frame(admin_panel) # ุฅูุดุงุก ุฅุทุงุฑ ูุงุญุชูุงุก ุงููุงุฆูุฉ ูุดุฑูุท ุงูุชูุฑูุฑ.
            list_frame.pack(fill=BOTH, expand=True, pady=5) # ูุถุน ุงูุฅุทุงุฑ ูู ุงูููุญุฉ.
            
            # ุดุฑูุท ุชูุฑูุฑ ูููุงุฆูุฉ
            scrollbar = ttk.Scrollbar(list_frame) # ุฅูุดุงุก ุดุฑูุท ุชูุฑูุฑ.
            scrollbar.pack(side=RIGHT, fill=Y) # ูุถุน ุดุฑูุท ุงูุชูุฑูุฑ ุนูู ูููู ุงูุฅุทุงุฑ.
            
            self.clients_tree = ttk.Treeview(list_frame, columns=('name', 'addr'), show='headings', # ุฅูุดุงุก ุนูุตุฑ Treeview ูุนุฑุถ ูุงุฆูุฉ ุงููุดุงุฑููู ุจุดูู ุฌุฏููู.
                                              bootstyle=INFO, yscrollcommand=scrollbar.set) # ุฑุจุท ุดุฑูุท ุงูุชูุฑูุฑ ุจู Treeview.
            self.clients_tree.heading('name', text='ุงูุงุณู') # ุชุญุฏูุฏ ุนููุงู ุงูุนููุฏ ุงูุฃูู.
            self.clients_tree.heading('addr', text='ุงูุนููุงู') # ุชุญุฏูุฏ ุนููุงู ุงูุนููุฏ ุงูุซุงูู.
            self.clients_tree.column('name', width=120) # ุชุญุฏูุฏ ุนุฑุถ ุงูุนููุฏ ุงูุฃูู.
            self.clients_tree.column('addr', width=150) # ุชุญุฏูุฏ ุนุฑุถ ุงูุนููุฏ ุงูุซุงูู.
            self.clients_tree.pack(fill=BOTH, expand=True) # ูุถุน ุงูู Treeview ูู ุงูุฅุทุงุฑ.
            
            scrollbar.config(command=self.clients_tree.yview) # ุฑุจุท ุญุฑูุฉ ุดุฑูุท ุงูุชูุฑูุฑ ุจุงูู Treeview.

            btn_frame = ttk.Frame(admin_panel) # ุฅูุดุงุก ุฅุทุงุฑ ูุงุญุชูุงุก ุฃุฒุฑุงุฑ ุงูุชุญูู ุงูุฎุงุตุฉ ุจุงููุดุฑู.
            btn_frame.pack(fill=X, pady=5) # ูุถุน ุงูุฅุทุงุฑ ูู ุงูููุญุฉ.
            ttk.Button(btn_frame, text="ูุชู", command=lambda: self.admin_action('admin_mute'), bootstyle=SECONDARY).pack(side=LEFT, expand=True, padx=2) # ุฅุถุงูุฉ ุฒุฑ "ูุชู" ูุฑุจุทู ุจุฏุงูุฉ admin_action.
            ttk.Button(btn_frame, text="ุฅูุบุงุก ุงููุชู", command=lambda: self.admin_action('admin_unmute'), bootstyle=SUCCESS).pack(side=LEFT, expand=True, padx=2) # ุฅุถุงูุฉ ุฒุฑ "ุฅูุบุงุก ุงููุชู".
            ttk.Button(btn_frame, text="ุฅููุงู ูุงููุฑุง", command=lambda: self.admin_action('admin_stop_video'), bootstyle=SECONDARY).pack(side=LEFT, expand=True, padx=2) # ุฅุถุงูุฉ ุฒุฑ "ุฅููุงู ูุงููุฑุง".
            ttk.Button(btn_frame, text="ุชุดุบูู ูุงููุฑุง", command=lambda: self.admin_action('admin_start_video'), bootstyle=SUCCESS).pack(side=LEFT, expand=True, padx=2) # ุฅุถุงูุฉ ุฒุฑ "ุชุดุบูู ูุงููุฑุง".
            ttk.Button(btn_frame, text="ุทุฑุฏ", command=lambda: self.admin_action('admin_kick'), bootstyle=DANGER).pack(side=LEFT, expand=True, padx=2) # ุฅุถุงูุฉ ุฒุฑ "ุทุฑุฏ".


        # ุฅุทุงุฑ ุงูููุฏูููุงุช
        self.videos_frame = ttk.Frame(main_frame) # ุฅูุดุงุก ุฅุทุงุฑ ูุนุฑุถ ููุงูุฐ ุงูููุฏูู.
        self.videos_frame.pack(fill=BOTH, expand=True, padx=10, pady=10) # ูุถุน ุงูุฅุทุงุฑ ูู ุงูุฌุฒุก ุงููุชุจูู ูู ุงููุงูุฐุฉ.
        self.my_video_label = ttk.Label(self.videos_frame, text="ุงููุงููุฑุง ุงูุฎุงุตุฉ ุจู", bootstyle=INVERSE, anchor=CENTER) # ุฅูุดุงุก ููุตู ูุนุฑุถ ุงูููุฏูู ุงูุฎุงุต ุจุงููุณุชุฎุฏู.
        self.my_video_label.pack(expand=True) # ูุถุน ุงูููุตู ูู ุฅุทุงุฑ ุงูููุฏูููุงุช.
        
        # ุฅุทุงุฑ ุงูุชุญูู ุงูุณููู
        control_frame = ttk.Frame(self, padding=10) # ุฅูุดุงุก ุฅุทุงุฑ ุณููู ูุฃุฒุฑุงุฑ ุงูุชุญูู ุงูุนุงูุฉ.
        control_frame.pack(fill=X) # ูุถุน ุงูุฅุทุงุฑ ุฃุณูู ุงููุงูุฐุฉ.
        self.disconnect_button = ttk.Button(control_frame, text="ุฅููุงุก ุงูุงุชุตุงู", command=self.on_closing, bootstyle=DANGER) # ุฅุถุงูุฉ ุฒุฑ "ุฅููุงุก ุงูุงุชุตุงู".
        self.disconnect_button.pack(side=LEFT, padx=5) # ูุถุน ุงูุฒุฑ ุนูู ุงููุณุงุฑ.
        self.video_button = ttk.Button(control_frame, text="๐ท ุฅููุงู ุงููุงููุฑุง", command=self.toggle_video, bootstyle=WARNING) # ุฅุถุงูุฉ ุฒุฑ ุงูุชุญูู ุจุงููุงููุฑุง.
        self.video_button.pack(side=RIGHT, padx=5) # ูุถุน ุงูุฒุฑ ุนูู ุงููููู.
        self.mute_button = ttk.Button(control_frame, text="๐ค ูุชู ุงูุตูุช", command=self.toggle_mute, bootstyle=WARNING) # ุฅุถุงูุฉ ุฒุฑ ุงูุชุญูู ุจุงูุตูุช.
        self.mute_button.pack(side=RIGHT, padx=5) # ูุถุน ุงูุฒุฑ ุนูู ุงููููู.

    def admin_action(self, action): # ุฏุงูุฉ ูุชูููุฐ ุฅุฌุฑุงุกุงุช ุงููุดุฑู.
        if not hasattr(self, 'clients_tree') or not self.clients_tree: # ุงูุชุญูู ูู ูุฌูุฏ ูุงุฆูุฉ ุงูุนููุงุก.
            messagebox.showwarning("ุชูุจูู", "ูุง ุชูุฌุฏ ูุงุฆูุฉ ุนููุงุก ูุชุงุญุฉ") # ุนุฑุถ ุชุญุฐูุฑ ุฅุฐุง ูู ุชูู ููุฌูุฏุฉ.
            return # ุงูุฎุฑูุฌ ูู ุงูุฏุงูุฉ.
            
        selected_item = self.clients_tree.focus() # ุงูุญุตูู ุนูู ุงูุนูุตุฑ (ุงููุดุงุฑู) ุงูุฐู ุญุฏุฏู ุงููุดุฑู ูู ุงููุงุฆูุฉ.
        if not selected_item: # ุงูุชุญูู ูู ุฃู ุงููุดุฑู ูุฏ ุญุฏุฏ ุนูุตุฑุงู.
            messagebox.showwarning("ุชูุจูู", "ุงูุฑุฌุงุก ุชุญุฏูุฏ ูุดุงุฑู ูู ุงููุงุฆูุฉ ุฃููุงู.") # ุนุฑุถ ุชุญุฐูุฑ ุฅุฐุง ูู ูุญุฏุฏ ุดูุฆุงู.
            return # ุงูุฎุฑูุฌ ูู ุงูุฏุงูุฉ.
        
        item_details = self.clients_tree.item(selected_item) # ุงูุญุตูู ุนูู ุชูุงุตูู ุงูุนูุตุฑ ุงููุญุฏุฏ.
        # ุงุณุชุนุงุฏุฉ ุงูุนููุงู ูู ุงููุต
        target_addr_str = item_details['values'][1] # ุงุณุชุฎุฑุงุฌ ูุต ุงูุนููุงู ูู ุชูุงุตูู ุงูุนูุตุฑ.
        try: # ูุญุงููุฉ ุชุญููู ุงููุต ุฅูู ุนููุงู (tuple).
            ip, port = target_addr_str.strip("()").replace("'", "").split(', ') # ุชูุธูู ุงููุต ูุชูุณููู ููุญุตูู ุนูู IP ูุงููููุฐ.
            target_addr = (ip, int(port)) # ุฅูุดุงุก ุงูุนููุงู ูู tuple.

            message = {'command': action, 'target_addr': target_addr} # ุฅูุดุงุก ุฑุณุงูุฉ ุงูุชุญูู ุงูุชู ุณูุชู ุฅุฑุณุงููุง ุฅูู ุงูุฎุงุฏู.
            self.control_socket.sendto(pickle.dumps(message), (self.server_ip, self.control_port)) # ุฅุฑุณุงู ุงูุฑุณุงูุฉ ุฅูู ุงูุฎุงุฏู ููููู ุจุชูุฌูู ุงูุฃูุฑ ูููุดุงุฑู ุงููุณุชูุฏู.
        except Exception as e: # ูู ุญุงู ุญุฏูุซ ุฎุทุฃ.
            messagebox.showerror("ุฎุทุฃ", f"ูุดู ูู ุชูููุฐ ุงูุฅุฌุฑุงุก: {e}") # ุนุฑุถ ุฑุณุงูุฉ ุฎุทุฃ.

    def send_video(self, server_ip): # ุฏุงูุฉ ุชุนูู ูู ุฎูุท ูููุตู ูุฅุฑุณุงู ุงูููุฏูู.
        while self.is_running: # ุญููุฉ ุชุณุชูุฑ ุทุงููุง ุฃู ุงูุงุชุตุงู ูุงุฆู.
            if not hasattr(self, 'cap') or not self.cap.isOpened(): # ุงูุชุญูู ูู ุฃู ุงููุงููุฑุง ุชุนูู.
                time.sleep(0.1) # ุงูุงูุชุธุงุฑ ููููุงู ูุจู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู.
                continue # ุงูุงูุชูุงู ุฅูู ุงูุฏูุฑุฉ ุงูุชุงููุฉ ูู ุงูุญููุฉ.

            ret, frame = self.cap.read() # ูุฑุงุกุฉ ุฅุทุงุฑ (ุตูุฑุฉ) ูุงุญุฏุฉ ูู ุงููุงููุฑุง.
            if not ret: continue # ุฅุฐุง ูุดูุช ุงููุฑุงุกุฉุ ุงูุชูู ุฅูู ุงูุฏูุฑุฉ ุงูุชุงููุฉ.
            
            # ุนุฑุถ ุงูููุฏูู ุงูุฎุงุต ุจู ูุญููุงู
            try: # ูุญุงููุฉ ุนุฑุถ ุงูููุฏูู ุนูู ูุงุฌูุฉ ุงููุณุชุฎุฏู.
                frame_rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB) # ุชุญููู ุฃููุงู ุงูุฅุทุงุฑ ูู BGR (ุงูุงูุชุฑุงุถู ูู OpenCV) ุฅูู RGB (ุงูููุงุณุจ ูู Tkinter).
                img = Image.fromarray(frame_rgb) # ุฅูุดุงุก ูุงุฆู ุตูุฑุฉ ูู ูุตูููุฉ ุงูุฅุทุงุฑ.
                img_tk = ImageTk.PhotoImage(image=img.resize((200, 150))) # ุชุญููู ุงูุตูุฑุฉ ุฅูู ุตูุบุฉ ูุชูุงููุฉ ูุน Tkinter ูุน ุชุบููุฑ ุญุฌููุง.
                self.my_video_label.imgtk = img_tk # ุงูุงุญุชูุงุธ ุจูุฑุฌุน ููุตูุฑุฉ ูููุนูุง ูู ุงูุญุฐู ุจูุงุณุทุฉ ุฌุงูุน ุงูููุงูุฉ ูู ุจุงูุซูู.
                self.my_video_label.configure(image=img_tk) # ุชุญุฏูุซ ุงูููุตู ูุนุฑุถ ุงูุตูุฑุฉ ุงูุฌุฏูุฏุฉ.
            except: pass # ุชุฌุงูู ุงูุฃุฎุทุงุก ุงูุชู ูุฏ ุชุญุฏุซ ุฃุซูุงุก ุฅุบูุงู ุงูุจุฑูุงูุฌ.

            if self.is_video_off: # ุฅุฐุง ูุงูุช ุงููุงููุฑุง ูู ูุถุน ุงูุฅููุงู.
                # ุฅุฑุณุงู ุฅุทุงุฑ ุฃุณูุฏ ุฅุฐุง ูุงูุช ุงููุงููุฑุง ูุชูููุฉ
                frame = np.zeros((480, 640, 3), dtype=np.uint8) # ุฅูุดุงุก ุฅุทุงุฑ ุฃุณูุฏ ุจููุณ ุงูุฃุจุนุงุฏ.
            
            encode_param = [int(cv2.IMWRITE_JPEG_QUALITY), IMAGE_QUALITY] # ุฅุนุฏุงุฏุงุช ุถุบุท ุงูุตูุฑุฉ (ุงูุฌูุฏุฉ).
            _, buffer = cv2.imencode('.jpg', frame, encode_param) # ุถุบุท ุงูุฅุทุงุฑ ุจุตูุบุฉ JPEG ูุชุญูููู ุฅูู ุจุงูุชุงุช.
            
            if buffer is not None: # ุงูุชุญูู ูู ูุฌุงุญ ุนูููุฉ ุงูุถุบุท.
                self.sockets['video'].sendto(buffer, (server_ip, self.video_port)) # ุฅุฑุณุงู ุงูุฅุทุงุฑ ุงููุถุบูุท ุฅูู ุงูุฎุงุฏู.
            time.sleep(0.03) # ุงูุงูุชุธุงุฑ ููุฏุฉ ูุตูุฑุฉ ููุชุญูู ูู ูุนุฏู ุงูุฅุทุงุฑุงุช (ุญูุงูู 30 ุฅุทุงุฑุงู ูู ุงูุซุงููุฉ).

    def receive_video(self): # ุฏุงูุฉ ุชุนูู ูู ุฎูุท ูููุตู ูุงุณุชูุจุงู ุงูููุฏูู.
        # ูุถุน ููุตู ุงูููุฏูู ุงูุฎุงุต ุจู ูู ุงูุดุจูุฉ
        self.remote_video_labels['me'] = self.my_video_label # ุฅุถุงูุฉ ููุตู ุงูููุฏูู ุงูุฎุงุต ุจุงููุณุชุฎุฏู ุฅูู ูุงููุณ ุงูููุตูุงุช.
        self.update_video_grid() # ุชุญุฏูุซ ุชุฑุชูุจ ุดุจูุฉ ุนุฑุถ ุงูููุฏูู.
        
        while self.is_running: # ุญููุฉ ุชุณุชูุฑ ุทุงููุง ุฃู ุงูุงุชุตุงู ูุงุฆู.
            try: # ูุญุงููุฉ ุงุณุชูุจุงู ูุนุฑุถ ุงูููุฏูู.
                packet, sender_addr = self.sockets['video'].recvfrom(65536) # ุงูุชุธุงุฑ ูุงุณุชูุจุงู ุญุฒูุฉ ุจูุงูุงุช ููุฏูู.
                if not self.is_running: continue # ุฅุฐุง ุชููู ุงูุงุชุตุงูุ ุชุฌุงูู ุงูุญุฒูุฉ.

                buffer = packet # ุชุณููุฉ ุงูุญุฒูุฉ ุจู buffer.
                frame = cv2.imdecode(np.frombuffer(buffer, dtype=np.uint8), cv2.IMREAD_COLOR) # ูู ุถุบุท ุงูุตูุฑุฉ (JPEG) ูุชุญููููุง ูุฑุฉ ุฃุฎุฑู ุฅูู ุฅุทุงุฑ (ูุตูููุฉ).
                if frame is None: continue # ุฅุฐุง ูุดู ูู ุงูุถุบุทุ ุชุฌุงูู ุงูุญุฒูุฉ.
                
                addr_key = str(sender_addr) # ุชุญููู ุนููุงู ุงููุฑุณู ุฅูู ูุต ูุงุณุชุฎุฏุงูู ูููุชุงุญ ูู ุงููุงููุณ.
                if addr_key not in self.remote_video_labels: # ุฅุฐุง ูุงู ูุฐุง ุงูููุฏูู ูู ูุดุงุฑู ุฌุฏูุฏ.
                    label = ttk.Label(self.videos_frame, bootstyle=INVERSE, anchor=CENTER) # ุฅูุดุงุก ููุตู ุฌุฏูุฏ ูุนุฑุถ ุงูููุฏูู.
                    self.remote_video_labels[addr_key] = label # ุฅุถุงูุฉ ุงูููุตู ุงูุฌุฏูุฏ ุฅูู ุงููุงููุณ.
                    self.update_video_grid() # ุฅุนุงุฏุฉ ุชุฑุชูุจ ุดุจูุฉ ุนุฑุถ ุงูููุฏูู ูุงุณุชูุนุงุจ ุงููุดุงุฑู ุงูุฌุฏูุฏ.

                frame_rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB) # ุชุญููู ุฃููุงู ุงูุฅุทุงุฑ ุฅูู RGB.
                img = Image.fromarray(frame_rgb) # ุฅูุดุงุก ูุงุฆู ุตูุฑุฉ.
                
                # ุชุญุฏูุซ ุงูุตูุฑุฉ ูู ุงููุงุฌูุฉ
                label = self.remote_video_labels[addr_key] # ุงูุญุตูู ุนูู ุงูููุตู ุงููุฎุตุต ููุฐุง ุงููุดุงุฑู.
                w, h = label.winfo_width(), label.winfo_height() # ุงูุญุตูู ุนูู ุงูุฃุจุนุงุฏ ุงูุญุงููุฉ ููููุตู ูู ุงููุงุฌูุฉ.
                if w > 1 and h > 1: # ุงูุชุฃูุฏ ูู ุฃู ููููุตู ุฃุจุนุงุฏุงู ูุนููุฉ (ุฃูุจุฑ ูู 1 ุจูุณู).
                    img_tk = ImageTk.PhotoImage(image=img.resize((w, h))) # ุชุบููุฑ ุญุฌู ุงูุตูุฑุฉ ูุชูุงุณุจ ุฃุจุนุงุฏ ุงูููุตู ูุชุญููููุง ูุตูุบุฉ Tkinter.
                    label.imgtk = img_tk # ุงูุงุญุชูุงุธ ุจูุฑุฌุน ููุตูุฑุฉ.
                    label.configure(image=img_tk) # ุชุญุฏูุซ ุงูููุตู ูุนุฑุถ ุงูุตูุฑุฉ ุงูุฌุฏูุฏุฉ.

            except Exception as e: # ูู ุญุงู ุญุฏูุซ ุฃู ุฎุทุฃ.
                # print(f"ุฎุทุฃ ุงุณุชูุจุงู ููุฏูู: {e}") # ูููู ุฅูุบุงุก ุงูุชุนููู ูุทุจุงุนุฉ ุงูุฃุฎุทุงุก.
                continue # ุงูุงุณุชูุฑุงุฑ ูู ุงูุญููุฉ.

    def send_audio(self, server_ip): # ุฏุงูุฉ ุชุนูู ูู ุฎูุท ูููุตู ูุฅุฑุณุงู ุงูุตูุช.
        while self.is_running: # ุญููุฉ ุชุณุชูุฑ ุทุงููุง ุฃู ุงูุงุชุตุงู ูุงุฆู.
            try: # ูุญุงููุฉ ูุฑุงุกุฉ ูุฅุฑุณุงู ุงูุตูุช.
                if not self.is_muted: # ุงูุชุญูู ูู ุฃู ุงููุณุชุฎุฏู ููุณ ูู ูุถุน ุงููุชู.
                    audio_data = self.audio_stream_in.read(self.chunk_size) # ูุฑุงุกุฉ ูุทุนุฉ ูู ุงูุจูุงูุงุช ุงูุตูุชูุฉ ูู ุงููููุฑูููู.
                    self.sockets['audio'].sendto(audio_data, (server_ip, self.audio_port)) # ุฅุฑุณุงู ุงูุจูุงูุงุช ุงูุตูุชูุฉ ุฅูู ุงูุฎุงุฏู.
            except Exception: # ูู ุญุงู ุญุฏูุซ ุฎุทุฃ (ูุซู ุฅุบูุงู ูุฌุฑู ุงูุตูุช).
                break # ุงูุฎุฑูุฌ ูู ุงูุญููุฉ.

    def receive_audio(self): # ุฏุงูุฉ ุชุนูู ูู ุฎูุท ูููุตู ูุงุณุชูุจุงู ุงูุตูุช.
        while self.is_running: # ุญููุฉ ุชุณุชูุฑ ุทุงููุง ุฃู ุงูุงุชุตุงู ูุงุฆู.
            try: # ูุญุงููุฉ ุงุณุชูุจุงู ูุชุดุบูู ุงูุตูุช.
                audio_data, _ = self.sockets['audio'].recvfrom(self.chunk_size * 2) # ุงูุชุธุงุฑ ูุงุณุชูุจุงู ูุทุนุฉ ูู ุงูุจูุงูุงุช ุงูุตูุชูุฉ.
                if self.is_running: # ุงูุชุฃูุฏ ูู ุฃู ุงูุงุชุตุงู ูุง ูุฒุงู ูุงุฆูุงู ุจุนุฏ ุงุณุชูุจุงู ุงูุจูุงูุงุช.
                    self.audio_stream_out.write(audio_data) # ูุชุงุจุฉ (ุชุดุบูู) ุงูุจูุงูุงุช ุงูุตูุชูุฉ ุงููุณุชููุฉ ุนูู ุงูุณูุงุนุงุช.
            except Exception: # ูู ุญุงู ุญุฏูุซ ุฃู ุฎุทุฃ.
                continue # ุงูุงุณุชูุฑุงุฑ ูู ุงูุญููุฉ.

    def receive_control(self): # ุฏุงูุฉ ุชุนูู ูู ุฎูุท ูููุตู ูุงุณุชูุจุงู ุฑุณุงุฆู ุงูุชุญูู.
        while self.is_running: # ุญููุฉ ุชุณุชูุฑ ุทุงููุง ุฃู ุงูุงุชุตุงู ูุงุฆู.
            try: # ูุญุงููุฉ ุงุณุชูุจุงู ููุนุงูุฌุฉ ุงูุฑุณุงุฆู.
                data, _ = self.sockets['control'].recvfrom(65536) # ุงูุชุธุงุฑ ูุงุณุชูุจุงู ุฑุณุงูุฉ ุชุญูู.
                message = pickle.loads(data) # ูู "ุชุบููู" ุงูุฑุณุงูุฉ.
                command = message.get('command') # ุงูุญุตูู ุนูู ููุน ุงูุฃูุฑ.
                
                # ุฃูุงูุฑ ูุชููุงูุง ุงููุดุฑู
                if self.is_admin and command == 'update_list': # ุฅุฐุง ูุงู ุงููุณุชุฎุฏู ูู ุงููุดุฑู ูุงูุฃูุฑ ูู ุชุญุฏูุซ ุงููุงุฆูุฉ.
                    self.update_admin_client_list(message.get('clients', {})) # ุงุณุชุฏุนุงุก ุฏุงูุฉ ูุชุญุฏูุซ ุนุฑุถ ูุงุฆูุฉ ุงูุนููุงุก.
                
                # ุฃูุงูุฑ ูุชููุงูุง ุงูุนููู ุงูุนุงุฏู
                elif command == 'force_mute': # ุฅุฐุง ูุงู ุงูุฃูุฑ ูู "ูุชู ุฅุฌุจุงุฑู".
                    self.is_muted = message.get('status', False) # ุชุญุฏูุซ ุญุงูุฉ ุงููุชู ุจูุงุกู ุนูู ุงูุฑุณุงูุฉ.
                    self.update_mute_button_status() # ุชุญุฏูุซ ุดูู ุฒุฑ ุงููุชู ููุนูุณ ุงูุญุงูุฉ ุงูุฌุฏูุฏุฉ.
                    
                    # ุฅุฑุณุงู ุญุงูุฉ ุงููุชู ููุฎุงุฏู (ูุฅุฑุณุงู ุฅุดุนุงุฑ ููุฌููุน)
                    mute_message = { # ุฅูุดุงุก ุฑุณุงูุฉ ูุฅุนูุงู ุงูุฎุงุฏู ุจุงูุญุงูุฉ ุงูุฌุฏูุฏุฉ.
                        'command': 'mute_status', 
                        'status': self.is_muted
                    }
                    self.control_socket.sendto(pickle.dumps(mute_message), (self.server_ip, self.control_port)) # ุฅุฑุณุงู ุงูุฑุณุงูุฉ.
                    
                elif command == 'force_video_off': # ุฅุฐุง ูุงู ุงูุฃูุฑ ูู "ุฅููุงู ูุงููุฑุง ุฅุฌุจุงุฑู".
                    self.is_video_off = message.get('status', False) # ุชุญุฏูุซ ุญุงูุฉ ุงููุงููุฑุง.
                    self.update_video_button_status() # ุชุญุฏูุซ ุดูู ุฒุฑ ุงููุงููุฑุง.
                elif command == 'kick': # ุฅุฐุง ูุงู ุงูุฃูุฑ ูู "ุทุฑุฏ".
                    messagebox.showinfo("ุชู ุงูุทุฑุฏ", "ูุงู ุงููุดุฑู ุจุทุฑุฏู ูู ุงูุฌูุณุฉ.") # ุนุฑุถ ุฑุณุงูุฉ ูููุณุชุฎุฏู.
                    self.on_closing(force=True) # ุฅุบูุงู ุงูุจุฑูุงูุฌ ุจุดูู ุฅุฌุจุงุฑู.
                elif command == 'server_shutdown': # ุฅุฐุง ูุงู ุงูุฃูุฑ ูู "ุฅุบูุงู ุงูุฎุงุฏู".
                    messagebox.showinfo("ุงููุทุงุน", "ุฃุบูู ุงููุดุฑู ุงูุฌูุณุฉ.") # ุนุฑุถ ุฑุณุงูุฉ ูููุณุชุฎุฏู.
                    self.on_closing(force=True) # ุฅุบูุงู ุงูุจุฑูุงูุฌ ุจุดูู ุฅุฌุจุงุฑู.
                elif command == 'notification': # ุฅุฐุง ูุงู ุงูุฃูุฑ ูู "ุฅุดุนุงุฑ".
                    # ุฅุถุงูุฉ ุงูุฅุดุนุงุฑ ุฅูู ุงูุทุงุจูุฑ ูุนุฑุถู ูู ุงููุงุฌูุฉ
                    self.notification_queue.put(message.get('message', '')) # ูุถุน ุฑุณุงูุฉ ุงูุฅุดุนุงุฑ ูู ุงูุทุงุจูุฑ ููุชู ุนุฑุถูุง ูุงุญูุงู.

            except Exception: # ูู ุญุงู ุญุฏูุซ ุฃู ุฎุทุฃ.
                continue # ุงูุงุณุชูุฑุงุฑ ูู ุงูุญููุฉ.

    def update_admin_client_list(self, clients): # ุฏุงูุฉ ูุชุญุฏูุซ ูุงุฆูุฉ ุงููุดุงุฑููู ูู ูุงุฌูุฉ ุงููุดุฑู.
        # ูุณุญ ุงููุงุฆูุฉ ุงูุญุงููุฉ
        for i in self.clients_tree.get_children(): # ุญููุฉ ุชูุฑุงุฑูุฉ ุนูู ุฌููุน ุงูุนูุงุตุฑ ุงูููุฌูุฏุฉ ูู ุงููุงุฆูุฉ.
            self.clients_tree.delete(i) # ุญุฐู ุงูุนูุตุฑ.
        # ุฅุถุงูุฉ ุงูุนููุงุก ุงูุฌุฏุฏ
        for addr_str, info in clients.items(): # ุญููุฉ ุชูุฑุงุฑูุฉ ุนูู ูุงููุณ ุงูุนููุงุก ุงูุฌุฏูุฏ.
            # ุฅุถุงูุฉ ุณุทุฑ ุฌุฏูุฏ ุฅูู ุงููุงุฆูุฉ ุจุงูุงุณู ูุงูุนููุงู.
            self.clients_tree.insert('', 'end', values=(info['name'], addr_str))

    def update_video_grid(self): # ุฏุงูุฉ ูุชุฑุชูุจ ููุงูุฐ ุงูููุฏูู ูู ุดุจูุฉ.
        # ุฅุฒุงูุฉ ุงูููุตูุงุช ุงููุฏููุฉ ูู ุงูุชุฑุชูุจ
        for widget in self.videos_frame.winfo_children(): # ุญููุฉ ุชูุฑุงุฑูุฉ ุนูู ูู ุงูุนูุงุตุฑ ุฏุงุฎู ุฅุทุงุฑ ุงูููุฏูู.
            widget.place_forget() # ุฅุฒุงูุฉ ุงูุชููุถุน ุงูุญุงูู ููุนูุตุฑ (ุฏูู ุญุฐูู).
            
        labels = list(self.remote_video_labels.values()) # ุงูุญุตูู ุนูู ูุงุฆูุฉ ุจุฌููุน ููุตูุงุช ุงูููุฏูู.
        num_videos = len(labels) # ุญุณุงุจ ุนุฏุฏ ุงูููุฏูููุงุช.
        if num_videos == 0: return # ุฅุฐุง ูู ููู ููุงู ููุฏูููุงุชุ ุงุฎุฑุฌ ูู ุงูุฏุงูุฉ.

        cols = int(np.ceil(np.sqrt(num_videos))) # ุญุณุงุจ ุงูุนุฏุฏ ุงูุฃูุซู ููุฃุนูุฏุฉ (ุงูุฌุฐุฑ ุงูุชุฑุจูุนู ููุนุฏุฏ ุงูุฅุฌูุงูู).
        rows = int(np.ceil(num_videos / cols)) if cols > 0 else 0 # ุญุณุงุจ ุนุฏุฏ ุงูุตููู ุงููุงุฒูุฉ.
        
        for i, label in enumerate(labels): # ุญููุฉ ุชูุฑุงุฑูุฉ ุนูู ูู ููุตู ููุฏูู ูุน ุงูุญุตูู ุนูู ุชุฑุชูุจู (i).
            row, col = divmod(i, cols) # ุญุณุงุจ ุฑูู ุงูุตู ูุงูุนููุฏ ุงูุญุงูู ุจูุงุกู ุนูู ุงูุชุฑุชูุจ.
            label.place(relx=col/cols, rely=row/rows, relwidth=1/cols, relheight=1/rows) # ูุถุน ุงูููุตู ูู ุงูุดุจูุฉ ุจุงุณุชุฎุฏุงู ุงูุฅุญุฏุงุซูุงุช ุงููุณุจูุฉ ูุถูุงู ุชูุฒูุน ูุชุณุงูู.

    def toggle_mute(self): # ุฏุงูุฉ ูุชู ุงุณุชุฏุนุงุคูุง ุนูุฏ ุงูุถุบุท ุนูู ุฒุฑ ูุชู ุงูุตูุช.
        self.is_muted = not self.is_muted # ุนูุณ ูููุฉ ูุชุบูุฑ ุญุงูุฉ ุงููุชู (ูู True ุฅูู False ูุงูุนูุณ).
        self.update_mute_button_status() # ุชุญุฏูุซ ุดูู ุงูุฒุฑ.
        
        # ุฅุฑุณุงู ุญุงูุฉ ุงููุชู ููุฎุงุฏู
        mute_message = { # ุฅูุดุงุก ุฑุณุงูุฉ ูุฅุนูุงู ุงูุฎุงุฏู ุจุงูุญุงูุฉ ุงูุฌุฏูุฏุฉ.
            'command': 'mute_status', 
            'status': self.is_muted
        }
        self.control_socket.sendto(pickle.dumps(mute_message), (self.server_ip, self.control_port)) # ุฅุฑุณุงู ุงูุฑุณุงูุฉ.
    
    def update_mute_button_status(self): # ุฏุงูุฉ ูุชุญุฏูุซ ูุต ูููู ุฒุฑ ูุชู ุงูุตูุช.
        if self.is_muted: # ุฅุฐุง ูุงู ุงููุณุชุฎุฏู ูู ูุถุน ุงููุชู.
            self.mute_button.config(text="๐ค ุฅูุบุงุก ุงููุชู", bootstyle=SUCCESS) # ุชุบููุฑ ุงููุต ูุงูููู ููุฅุดุงุฑุฉ ุฅูู ุฃู ุงูุถุบุทุฉ ุงูุชุงููุฉ ุณุชูุบู ุงููุชู.
        else: # ุฅุฐุง ูู ููู ูู ูุถุน ุงููุชู.
            self.mute_button.config(text="๐ ูุชู ุงูุตูุช", bootstyle=WARNING) # ุชุบููุฑ ุงููุต ูุงูููู ููุฅุดุงุฑุฉ ุฅูู ุฃู ุงูุถุบุทุฉ ุงูุชุงููุฉ ุณุชูุนู ุงููุชู.

    def toggle_video(self): # ุฏุงูุฉ ูุชู ุงุณุชุฏุนุงุคูุง ุนูุฏ ุงูุถุบุท ุนูู ุฒุฑ ุงููุงููุฑุง.
        self.is_video_off = not self.is_video_off # ุนูุณ ูููุฉ ูุชุบูุฑ ุญุงูุฉ ุงููุงููุฑุง.
        self.update_video_button_status() # ุชุญุฏูุซ ุดูู ุงูุฒุฑ.

    def update_video_button_status(self): # ุฏุงูุฉ ูุชุญุฏูุซ ูุต ูููู ุฒุฑ ุงููุงููุฑุง.
        if self.is_video_off: # ุฅุฐุง ูุงูุช ุงููุงููุฑุง ูุชูููุฉ.
            self.video_button.config(text="๐ท ุชุดุบูู ุงููุงููุฑุง", bootstyle=SUCCESS) # ุชุบููุฑ ุงููุต ูุงูููู ููุฅุดุงุฑุฉ ุฅูู ุฃู ุงูุถุบุทุฉ ุงูุชุงููุฉ ุณุชุดุบู ุงููุงููุฑุง.
        else: # ุฅุฐุง ูุงูุช ุงููุงููุฑุง ุชุนูู.
            self.video_button.config(text="๐ท ุฅููุงู ุงููุงููุฑุง", bootstyle=WARNING) # ุชุบููุฑ ุงููุต ูุงูููู ููุฅุดุงุฑุฉ ุฅูู ุฃู ุงูุถุบุทุฉ ุงูุชุงููุฉ ุณุชููู ุงููุงููุฑุง.

    def on_closing(self, force=False): # ุฏุงูุฉ ูุชู ุงุณุชุฏุนุงุคูุง ุนูุฏ ูุญุงููุฉ ุฅุบูุงู ุงูุจุฑูุงูุฌ.
        confirm = force or messagebox.askokcancel("ุฎุฑูุฌ", "ูู ุฃูุช ูุชุฃูุฏ ุฃูู ุชุฑูุฏ ุฅููุงุก ุงูุงุชุตุงูุ") # ุนุฑุถ ูุฑุจุน ุญูุงุฑ ููุชุฃููุฏุ ุฅูุง ุฅุฐุง ูุงู ุงูุฅุบูุงู ุฅุฌุจุงุฑูุงู (force=True).
        if confirm: # ุฅุฐุง ูุงูู ุงููุณุชุฎุฏู ุนูู ุงูุฎุฑูุฌ.
            self.is_running = False # ุชุนููู ุญุงูุฉ ุงูุชุดุบูู ุฅูู False ูุฅููุงู ุฌููุน ุงูุญููุงุช ุงูุชูุฑุงุฑูุฉ ูู ุงูุฎููุท.
            time.sleep(0.5) # ุงูุงูุชุธุงุฑ ููุฏุฉ ูุตู ุซุงููุฉ ูุฅุนุทุงุก ูุฑุตุฉ ููุฎููุท ููุชููู ุจุดูู ุณููู.

            if not self.is_admin and hasattr(self, 'server_ip'): # ุฅุฐุง ูุงู ุงููุณุชุฎุฏู ุนูููุงู ุนุงุฏูุงู (ูููุณ ุงููุดุฑู).
                leave_message = {'command': 'leave'} # ุฅูุดุงุก ุฑุณุงูุฉ ูุบุงุฏุฑุฉ.
                self.sockets['control'].sendto(pickle.dumps(leave_message), (self.server_ip, self.control_port)) # ุฅุฑุณุงู ุฑุณุงูุฉ ุงููุบุงุฏุฑุฉ ุฅูู ุงูุฎุงุฏู.
            
            if self.server: # ุฅุฐุง ูุงู ุงููุณุชุฎุฏู ูู ุงููุดุฑู (ูุจุงูุชุงูู ููุชูู ูุงุฆู ุงูุฎุงุฏู).
                self.server.stop() # ุฅููุงู ุงูุฎุงุฏู.
            
            # ุฅุบูุงู ุงูููุงุฑุฏ
            if hasattr(self, 'cap'): # ุงูุชุญูู ูู ูุฌูุฏ ูุงุฆู ุงููุงููุฑุง.
                self.cap.release() # ุชุญุฑูุฑ ุงููุงููุฑุง.
            if hasattr(self, 'p_audio'): # ุงูุชุญูู ูู ูุฌูุฏ ูุงุฆู ุงูุตูุช.
                self.p_audio.terminate() # ุฅููุงุก ุฎุฏูุฉ ุงูุตูุช.
            if hasattr(self, 'sockets'): # ุงูุชุญูู ูู ูุฌูุฏ ูุงููุณ ุงูููุงุจุณ.
                for s in self.sockets.values(): # ุญููุฉ ุชูุฑุงุฑูุฉ ุนูู ุฌููุน ุงูููุงุจุณ.
                    s.close() # ุฅุบูุงู ูู ููุจุณ.
            
            self.destroy() # ุชุฏููุฑ ูุงูุฐุฉ ุงููุงุฌูุฉ ุงูุฑุณูููุฉ.
            sys.exit(0) # ุฅููุงุก ุงูุจุฑูุงูุฌ ุจุดูู ูุงูู.

if __name__ == "__main__": # ููุทุฉ ุจุฏุงูุฉ ุชูููุฐ ุงูุจุฑูุงูุฌ. ูุฐุง ุงูุดุฑุท ูุถูู ุฃู ุงูููุฏ ุงูุชุงูู ูุง ูุนูู ุฅูุง ุนูุฏ ุชุดุบูู ุงูููู ูุจุงุดุฑุฉ.
    app = ChatApp() # ุฅูุดุงุก ูุงุฆู ูู ูุฆุฉ ุงูุชุทุจูู ุงูุฑุฆูุณูุฉ.
    app.mainloop() # ุจุฏุก ุงูุญููุฉ ุงูุฑุฆูุณูุฉ ูููุงุฌูุฉ ุงูุฑุณูููุฉุ ูุงูุชู ุชุฌุนู ุงูุจุฑูุงูุฌ ููุชุธุฑ ุชูุงุนู ุงููุณุชุฎุฏู.